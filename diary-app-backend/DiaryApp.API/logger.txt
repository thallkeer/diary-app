User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/8185b9c2-304b-46de-9e11-db61d54df0d0/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 58.9637ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/8185b9c2-304b-46de-9e11-db61d54df0d0/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(System.String, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Test
08.02.2020 13:26:40 haha exception 
    at DiaryApp.API.Controllers.MainPageController.GetMainPage(String userId, Int32 year, Int32 month)
Executing ObjectResult, writing value of type 'System.String'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 52760.7386ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 53164.5806ms 400 text/plain; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/8185b9c2-304b-46de-9e11-db61d54df0d0/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 100.833ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/8185b9c2-304b-46de-9e11-db61d54df0d0/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(System.String, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (52ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (45ms) [Parameters=[@__userID_0='?' (Size = 450), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 7264.0864ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 8222.9884ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 48.5416ms 204 
Request finished in 65.2228ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (6ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 228.1162ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 241.5516ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 391.6199ms 200 application/json; charset=utf-8
Request finished in 381.5092ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/register  
CORS policy execution successful.
Request finished in 45.4459ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/register application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Route matched with {action = "Register", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__user_Username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Username] = @__user_Username_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 8000) (DbType = Binary), @p2='?' (Size = 8000) (DbType = Binary), @p3='?' (Size = 4000), @p4='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([ID], [PasswordHash], [PasswordSalt], [ProfileImageUrl], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API) in 222.9588ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Request finished in 307.3377ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Request finished in 25.2756ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Successfully validated the token.
An unhandled exception has occurred while executing the request.
Request finished in 204.96ms 500 text/plain
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/register  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 85.1615ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/register application/json;charset=UTF-8 50
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Route matched with {action = "Register", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [ID] nvarchar(450) NOT NULL,
    [Username] nvarchar(50) NOT NULL,
    [PasswordHash] varbinary(max) NOT NULL,
    [PasswordSalt] varbinary(max) NOT NULL,
    [ProfileImageUrl] nvarchar(max) NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([ID])
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [EventLists] (
    [ID] int NOT NULL IDENTITY,
    [Title] nvarchar(50) NULL,
    [PageID] int NOT NULL,
    [DesiresAreaID] int NULL,
    [IdeasAreaID] int NULL,
    CONSTRAINT [PK_EventLists] PRIMARY KEY ([ID])
);
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Events] (
    [ID] int NOT NULL IDENTITY,
    [Url] nvarchar(max) NULL,
    [Subject] nvarchar(200) NULL,
    [OwnerID] int NOT NULL,
    [Date] datetime2 NOT NULL,
    [Description] nvarchar(max) NULL,
    CONSTRAINT [PK_Events] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_Events_EventLists_OwnerID] FOREIGN KEY ([OwnerID]) REFERENCES [EventLists] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [PageBase] (
    [ID] int NOT NULL IDENTITY,
    [Year] int NOT NULL,
    [Month] int NOT NULL,
    [UserID] nvarchar(450) NOT NULL,
    [Discriminator] nvarchar(max) NOT NULL,
    [PurchasesAreaID] int NULL,
    [DesiresAreaID] int NULL,
    [IdeasAreaID] int NULL,
    [GoalsAreaID] int NULL,
    CONSTRAINT [PK_PageBase] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_PageBase_Users_UserID] FOREIGN KEY ([UserID]) REFERENCES [Users] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [DesiresAreas] (
    [ID] int NOT NULL IDENTITY,
    [Header] nvarchar(100) NOT NULL,
    [PageID] int NOT NULL,
    CONSTRAINT [PK_DesiresAreas] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_DesiresAreas_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [GoalsAreas] (
    [ID] int NOT NULL IDENTITY,
    [Header] nvarchar(100) NOT NULL,
    [PageID] int NOT NULL,
    CONSTRAINT [PK_GoalsAreas] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_GoalsAreas_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [IdeasAreas] (
    [ID] int NOT NULL IDENTITY,
    [Header] nvarchar(100) NOT NULL,
    [PageID] int NOT NULL,
    CONSTRAINT [PK_IdeasAreas] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_IdeasAreas_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [PurchasesAreas] (
    [ID] int NOT NULL IDENTITY,
    [Header] nvarchar(100) NOT NULL,
    [PageID] int NOT NULL,
    CONSTRAINT [PK_PurchasesAreas] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_PurchasesAreas_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [HabitsTrackers] (
    [ID] int NOT NULL IDENTITY,
    [GoalName] nvarchar(100) NOT NULL,
    [SelectedDays] nvarchar(max) NULL,
    [GoalsAreaID] int NOT NULL,
    CONSTRAINT [PK_HabitsTrackers] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_HabitsTrackers_GoalsAreas_GoalsAreaID] FOREIGN KEY ([GoalsAreaID]) REFERENCES [GoalsAreas] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TodoLists] (
    [ID] int NOT NULL IDENTITY,
    [Title] nvarchar(50) NULL,
    [PageID] int NOT NULL,
    [PurchasesAreaID] int NULL,
    CONSTRAINT [PK_TodoLists] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_TodoLists_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE,
    CONSTRAINT [FK_TodoLists_PurchasesAreas_PurchasesAreaID] FOREIGN KEY ([PurchasesAreaID]) REFERENCES [PurchasesAreas] ([ID]) ON DELETE NO ACTION
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Todos] (
    [ID] int NOT NULL IDENTITY,
    [Url] nvarchar(max) NULL,
    [Subject] nvarchar(200) NULL,
    [OwnerID] int NOT NULL,
    [Done] bit NOT NULL,
    CONSTRAINT [PK_Todos] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_Todos_TodoLists_OwnerID] FOREIGN KEY ([OwnerID]) REFERENCES [TodoLists] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_DesiresAreas_PageID] ON [DesiresAreas] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_EventLists_DesiresAreaID] ON [EventLists] ([DesiresAreaID]);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_EventLists_IdeasAreaID] ON [EventLists] ([IdeasAreaID]) WHERE [IdeasAreaID] IS NOT NULL;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_EventLists_PageID] ON [EventLists] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_Events_OwnerID] ON [Events] ([OwnerID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_GoalsAreas_PageID] ON [GoalsAreas] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_HabitsTrackers_GoalsAreaID] ON [HabitsTrackers] ([GoalsAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_IdeasAreas_PageID] ON [IdeasAreas] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_DesiresAreaID] ON [PageBase] ([DesiresAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_GoalsAreaID] ON [PageBase] ([GoalsAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_IdeasAreaID] ON [PageBase] ([IdeasAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_PurchasesAreaID] ON [PageBase] ([PurchasesAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_UserID] ON [PageBase] ([UserID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PurchasesAreas_PageID] ON [PurchasesAreas] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TodoLists_PageID] ON [TodoLists] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TodoLists_PurchasesAreaID] ON [TodoLists] ([PurchasesAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_Todos_OwnerID] ON [Todos] ([OwnerID]);
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [EventLists] ADD CONSTRAINT [FK_EventLists_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [EventLists] ADD CONSTRAINT [FK_EventLists_DesiresAreas_DesiresAreaID] FOREIGN KEY ([DesiresAreaID]) REFERENCES [DesiresAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [EventLists] ADD CONSTRAINT [FK_EventLists_IdeasAreas_IdeasAreaID] FOREIGN KEY ([IdeasAreaID]) REFERENCES [IdeasAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [PageBase] ADD CONSTRAINT [FK_PageBase_DesiresAreas_DesiresAreaID] FOREIGN KEY ([DesiresAreaID]) REFERENCES [DesiresAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [PageBase] ADD CONSTRAINT [FK_PageBase_IdeasAreas_IdeasAreaID] FOREIGN KEY ([IdeasAreaID]) REFERENCES [IdeasAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [PageBase] ADD CONSTRAINT [FK_PageBase_GoalsAreas_GoalsAreaID] FOREIGN KEY ([GoalsAreaID]) REFERENCES [GoalsAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [PageBase] ADD CONSTRAINT [FK_PageBase_PurchasesAreas_PurchasesAreaID] FOREIGN KEY ([PurchasesAreaID]) REFERENCES [PurchasesAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (27ms) [Parameters=[@__user_Username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Username] = @__user_Username_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (Size = 8000) (DbType = Binary), @p2='?' (Size = 8000) (DbType = Binary), @p3='?' (Size = 4000), @p4='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([ID], [PasswordHash], [PasswordSalt], [ProfileImageUrl], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API) in 2776.9081ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Request finished in 3165.2463ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Request finished in 46.2878ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Successfully validated the token.
An unhandled exception has occurred while executing the request.
Request finished in 171.1751ms 500 text/plain
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage//2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 149.5806ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Successfully validated the token.
An unhandled exception has occurred while executing the request.
Request finished in 1036.9246ms 500 text/plain
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Request finished in 100.7938ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Successfully validated the token.
An unhandled exception has occurred while executing the request.
Request finished in 150.7366ms 500 text/plain
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Successfully validated the token.
An unhandled exception has occurred while executing the request.
Request finished in 889.6966ms 500 text/plain
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Request finished in 206.1591ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage//2020/2  
CORS policy execution successful.
Successfully validated the token.
An unhandled exception has occurred while executing the request.
Request finished in 117.8349ms 500 text/plain
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/register  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 77.3453ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/register application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Route matched with {action = "Register", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (42ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [ID] int NOT NULL IDENTITY,
    [Username] nvarchar(50) NOT NULL,
    [PasswordHash] varbinary(max) NOT NULL,
    [PasswordSalt] varbinary(max) NOT NULL,
    [ProfileImageUrl] nvarchar(max) NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([ID])
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [EventLists] (
    [ID] int NOT NULL IDENTITY,
    [Title] nvarchar(50) NULL,
    [PageID] int NOT NULL,
    [DesiresAreaID] int NULL,
    [IdeasAreaID] int NULL,
    CONSTRAINT [PK_EventLists] PRIMARY KEY ([ID])
);
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Events] (
    [ID] int NOT NULL IDENTITY,
    [Url] nvarchar(max) NULL,
    [Subject] nvarchar(200) NULL,
    [OwnerID] int NOT NULL,
    [Date] datetime2 NOT NULL,
    [Description] nvarchar(max) NULL,
    CONSTRAINT [PK_Events] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_Events_EventLists_OwnerID] FOREIGN KEY ([OwnerID]) REFERENCES [EventLists] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [PageBase] (
    [ID] int NOT NULL IDENTITY,
    [Year] int NOT NULL,
    [Month] int NOT NULL,
    [UserID] int NOT NULL,
    [Discriminator] nvarchar(max) NOT NULL,
    [PurchasesAreaID] int NULL,
    [DesiresAreaID] int NULL,
    [IdeasAreaID] int NULL,
    [GoalsAreaID] int NULL,
    CONSTRAINT [PK_PageBase] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_PageBase_Users_UserID] FOREIGN KEY ([UserID]) REFERENCES [Users] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [DesiresAreas] (
    [ID] int NOT NULL IDENTITY,
    [Header] nvarchar(100) NOT NULL,
    [PageID] int NOT NULL,
    CONSTRAINT [PK_DesiresAreas] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_DesiresAreas_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [GoalsAreas] (
    [ID] int NOT NULL IDENTITY,
    [Header] nvarchar(100) NOT NULL,
    [PageID] int NOT NULL,
    CONSTRAINT [PK_GoalsAreas] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_GoalsAreas_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [IdeasAreas] (
    [ID] int NOT NULL IDENTITY,
    [Header] nvarchar(100) NOT NULL,
    [PageID] int NOT NULL,
    CONSTRAINT [PK_IdeasAreas] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_IdeasAreas_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [PurchasesAreas] (
    [ID] int NOT NULL IDENTITY,
    [Header] nvarchar(100) NOT NULL,
    [PageID] int NOT NULL,
    CONSTRAINT [PK_PurchasesAreas] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_PurchasesAreas_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [HabitsTrackers] (
    [ID] int NOT NULL IDENTITY,
    [GoalName] nvarchar(100) NOT NULL,
    [SelectedDays] nvarchar(max) NULL,
    [GoalsAreaID] int NOT NULL,
    CONSTRAINT [PK_HabitsTrackers] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_HabitsTrackers_GoalsAreas_GoalsAreaID] FOREIGN KEY ([GoalsAreaID]) REFERENCES [GoalsAreas] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TodoLists] (
    [ID] int NOT NULL IDENTITY,
    [Title] nvarchar(50) NULL,
    [PageID] int NOT NULL,
    [PurchasesAreaID] int NULL,
    CONSTRAINT [PK_TodoLists] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_TodoLists_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE,
    CONSTRAINT [FK_TodoLists_PurchasesAreas_PurchasesAreaID] FOREIGN KEY ([PurchasesAreaID]) REFERENCES [PurchasesAreas] ([ID]) ON DELETE NO ACTION
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Todos] (
    [ID] int NOT NULL IDENTITY,
    [Url] nvarchar(max) NULL,
    [Subject] nvarchar(200) NULL,
    [OwnerID] int NOT NULL,
    [Done] bit NOT NULL,
    CONSTRAINT [PK_Todos] PRIMARY KEY ([ID]),
    CONSTRAINT [FK_Todos_TodoLists_OwnerID] FOREIGN KEY ([OwnerID]) REFERENCES [TodoLists] ([ID]) ON DELETE CASCADE
);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_DesiresAreas_PageID] ON [DesiresAreas] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_EventLists_DesiresAreaID] ON [EventLists] ([DesiresAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_EventLists_IdeasAreaID] ON [EventLists] ([IdeasAreaID]) WHERE [IdeasAreaID] IS NOT NULL;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_EventLists_PageID] ON [EventLists] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_Events_OwnerID] ON [Events] ([OwnerID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_GoalsAreas_PageID] ON [GoalsAreas] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_HabitsTrackers_GoalsAreaID] ON [HabitsTrackers] ([GoalsAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_IdeasAreas_PageID] ON [IdeasAreas] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_DesiresAreaID] ON [PageBase] ([DesiresAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_GoalsAreaID] ON [PageBase] ([GoalsAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_IdeasAreaID] ON [PageBase] ([IdeasAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_PurchasesAreaID] ON [PageBase] ([PurchasesAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PageBase_UserID] ON [PageBase] ([UserID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_PurchasesAreas_PageID] ON [PurchasesAreas] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TodoLists_PageID] ON [TodoLists] ([PageID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TodoLists_PurchasesAreaID] ON [TodoLists] ([PurchasesAreaID]);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_Todos_OwnerID] ON [Todos] ([OwnerID]);
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [EventLists] ADD CONSTRAINT [FK_EventLists_PageBase_PageID] FOREIGN KEY ([PageID]) REFERENCES [PageBase] ([ID]) ON DELETE CASCADE;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [EventLists] ADD CONSTRAINT [FK_EventLists_DesiresAreas_DesiresAreaID] FOREIGN KEY ([DesiresAreaID]) REFERENCES [DesiresAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [EventLists] ADD CONSTRAINT [FK_EventLists_IdeasAreas_IdeasAreaID] FOREIGN KEY ([IdeasAreaID]) REFERENCES [IdeasAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [PageBase] ADD CONSTRAINT [FK_PageBase_DesiresAreas_DesiresAreaID] FOREIGN KEY ([DesiresAreaID]) REFERENCES [DesiresAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [PageBase] ADD CONSTRAINT [FK_PageBase_IdeasAreas_IdeasAreaID] FOREIGN KEY ([IdeasAreaID]) REFERENCES [IdeasAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [PageBase] ADD CONSTRAINT [FK_PageBase_GoalsAreas_GoalsAreaID] FOREIGN KEY ([GoalsAreaID]) REFERENCES [GoalsAreas] ([ID]) ON DELETE NO ACTION;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [PageBase] ADD CONSTRAINT [FK_PageBase_PurchasesAreas_PurchasesAreaID] FOREIGN KEY ([PurchasesAreaID]) REFERENCES [PurchasesAreas] ([ID]) ON DELETE NO ACTION;
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
Executed action DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API) in 3516.9827ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Request finished in 3713.6327ms 400 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/register  
CORS policy execution successful.
Request finished in 47.1904ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/register application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Route matched with {action = "Register", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
Executed action DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API) in 75.6112ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Request finished in 207.1707ms 400 application/problem+json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/register  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 77.371ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/register application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Route matched with {action = "Register", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (26ms) [Parameters=[@__user_Username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Username] = @__user_Username_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
Executed DbCommand (474ms) [Parameters=[@p0='?' (Size = 8000) (DbType = Binary), @p1='?' (Size = 8000) (DbType = Binary), @p2='?' (Size = 4000), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([PasswordHash], [PasswordSalt], [ProfileImageUrl], [Username])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API) in 54381.8401ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Request finished in 54536.7749ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 20.2645ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:46:48 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 168.7354ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 339.073ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 122.131ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:47:24 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 26313.5715ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 26479.6127ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 291.796ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,105ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (236ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:48:44 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 5251.5426ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 5459.3949ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 128.5375ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,280ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (211ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:49:34 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1716.081ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 2020.1574ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 512.7217ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (972ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (15ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:49:46 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1131.4633ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1749.5158ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 140.0091ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (921ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (59ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:50:26 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1069.477ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1189.9514ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 210.5069ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,295ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (238ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:51:46 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1668.1255ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1869.4496ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 154.4485ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (913ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:51:55 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1047.2673ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1251.9835ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 149.7063ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (694ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 7:52:07 MainPage is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 790.1508ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 923.028ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/createNew  
CORS policy execution successful.
Request finished in 27.7906ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/mainpage/createNew application/json;charset=UTF-8 34
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.CreateNewPage (DiaryApp.API)'
Route matched with {action = "CreateNewPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNewPage(DiaryApp.API.Models.PageParams) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (935ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (453ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (402ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLists] ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [EventLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (404ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.CreateNewPage (DiaryApp.API) in 20343.2975ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.CreateNewPage (DiaryApp.API)'
Request finished in 20578.3621ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 46.0527ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 55.6174ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (870ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1,052ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (41ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (62ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (126ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed DbCommand (144ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1313.6339ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1447.8779ms
Request finished in 1631.2294ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1658.7821ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 191.8199ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (36ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 9:14:21 MainPage is not found for 1 2020 3
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 159.352ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 266.7626ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/createNew  
CORS policy execution successful.
Request finished in 32.5166ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/mainpage/createNew application/json;charset=UTF-8 34
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.CreateNewPage (DiaryApp.API)'
Route matched with {action = "CreateNewPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNewPage(DiaryApp.API.Models.PageParams) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLists] ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [EventLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.CreateNewPage (DiaryApp.API) in 235.0263ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.CreateNewPage (DiaryApp.API)'
Request finished in 341.139ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 32.6788ms 204 
Request finished in 42.6548ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 127.0086ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 131.6162ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 307.4333ms 200 application/json; charset=utf-8
Request finished in 309.9588ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 24.4293ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 86.1138ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 191.5379ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 35.9095ms 204 
Request finished in 49.2569ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 124.3426ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 125.3602ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 307.0436ms 200 application/json; charset=utf-8
Request finished in 304.9531ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 26.3702ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
09.02.2020 9:14:34 Month page is not found for 1 2020 2
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 148.9484ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 264.3413ms 404 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/createNew  
CORS policy execution successful.
Request finished in 29.693ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/monthpage/createNew application/json;charset=UTF-8 34
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.CreateNewPage (DiaryApp.API)'
Route matched with {action = "CreateNewPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNewPage(DiaryApp.API.Models.PageParams) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year], [DesiresAreaID], [GoalsAreaID], [IdeasAreaID], [PurchasesAreaID])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 100), @p3='?' (DbType = Int32), @p4='?' (Size = 100), @p5='?' (DbType = Int32), @p6='?' (Size = 100), @p7='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DesiresAreas] ([Header], [PageID])
VALUES (@p0, @p1);
SELECT [ID]
FROM [DesiresAreas]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();

INSERT INTO [GoalsAreas] ([Header], [PageID])
VALUES (@p2, @p3);
SELECT [ID]
FROM [GoalsAreas]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();

INSERT INTO [IdeasAreas] ([Header], [PageID])
VALUES (@p4, @p5);
SELECT [ID]
FROM [IdeasAreas]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();

INSERT INTO [PurchasesAreas] ([Header], [PageID])
VALUES (@p6, @p7);
SELECT [ID]
FROM [PurchasesAreas]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (9ms) [Parameters=[@p16='?' (DbType = Int32), @p8='?' (Size = 4000), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [PageBase] SET [Discriminator] = @p8, [Month] = @p9, [UserID] = @p10, [Year] = @p11, [DesiresAreaID] = @p12, [GoalsAreaID] = @p13, [IdeasAreaID] = @p14, [PurchasesAreaID] = @p15
WHERE [ID] = @p16;
SELECT @@ROWCOUNT;
Executed DbCommand (73ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Size = 50), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (Size = 50), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (Size = 50), @p16='?' (Size = 100), @p17='?' (DbType = Int32), @p18='?' (Size = 4000), @p27='?' (DbType = Int32), @p19='?' (Size = 4000), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = Int32), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = Int32), @p30='?' (Size = 50), @p31='?' (DbType = Int32), @p32='?' (DbType = Int32), @p33='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DECLARE @inserted0 TABLE ([ID] int, [_Position] [int]);
MERGE [EventLists] USING (
VALUES (@p0, @p1, @p2, @p3, 0),
(@p4, @p5, @p6, @p7, 1),
(@p8, @p9, @p10, @p11, 2),
(@p12, @p13, @p14, @p15, 3)) AS i ([DesiresAreaID], [IdeasAreaID], [PageID], [Title], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (i.[DesiresAreaID], i.[IdeasAreaID], i.[PageID], i.[Title])
OUTPUT INSERTED.[ID], i._Position
INTO @inserted0;

SELECT [t].[ID] FROM [EventLists] t
INNER JOIN @inserted0 i ON ([t].[ID] = [i].[ID])
ORDER BY [i].[_Position];

INSERT INTO [HabitsTrackers] ([GoalName], [GoalsAreaID], [SelectedDays])
VALUES (@p16, @p17, @p18);
SELECT [ID]
FROM [HabitsTrackers]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();

UPDATE [PageBase] SET [Discriminator] = @p19, [Month] = @p20, [UserID] = @p21, [Year] = @p22, [DesiresAreaID] = @p23, [GoalsAreaID] = @p24, [IdeasAreaID] = @p25, [PurchasesAreaID] = @p26
WHERE [ID] = @p27;
SELECT @@ROWCOUNT;

DECLARE @inserted6 TABLE ([ID] int, [_Position] [int]);
MERGE [TodoLists] USING (
VALUES (@p28, @p29, @p30, 0),
(@p31, @p32, @p33, 1)) AS i ([PageID], [PurchasesAreaID], [Title], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([PageID], [PurchasesAreaID], [Title])
VALUES (i.[PageID], i.[PurchasesAreaID], i.[Title])
OUTPUT INSERTED.[ID], i._Position
INTO @inserted6;

SELECT [t].[ID] FROM [TodoLists] t
INNER JOIN @inserted6 i ON ([t].[ID] = [i].[ID])
ORDER BY [i].[_Position];
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.CreateNewPage (DiaryApp.API) in 6416.255ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.CreateNewPage (DiaryApp.API)'
Request finished in 6519.59ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 42.9162ms 204 
Request finished in 52.4396ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 89.3236ms 204 
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Successfully validated the token.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 363.7507ms 204 
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (6ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (12ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Successfully validated the token.
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 312.9324ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 307.6693ms
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 530.6202ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request finished in 563.3153ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (8ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 521.8419ms
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Request finished in 762.3037ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 281.1431ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 492.852ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/  
CORS policy execution successful.
Request finished in 25.5537ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/events/ application/json;charset=UTF-8 41
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
Route matched with {action = "UpdateEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Events] SET [Date] = @p0, [Description] = @p1, [OwnerID] = @p2, [Subject] = @p3, [Url] = @p4
WHERE [ID] = @p5;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API) in 337.0605ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
An unhandled exception has occurred while executing the request.
Request finished in 1068.4465ms 500 text/plain
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 29.9911ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 79.3503ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 184.3483ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 34.7343ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 49.6013ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 148.2244ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 147.479ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 308.0872ms 200 application/json; charset=utf-8
Request finished in 323.5874ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 149.529ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,118ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (86ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 5312.2532ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 6694.8588ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 42.8433ms 204 
Request finished in 53.7477ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,055ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1,020ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (108ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (130ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1436.77ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1468.8778ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1700.3824ms 200 application/json; charset=utf-8
Request finished in 1727.8952ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 104.3064ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (981ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (41ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1214.9348ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1447.0795ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 42.313ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 54.9524ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (896ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (904ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (17ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (13ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (77ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (112ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1373.6413ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1406.3788ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1755.9629ms 200 application/json; charset=utf-8
Request finished in 1758.0821ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 672.0113ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (971ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (37ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1184.0521ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 2778.3523ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 59.2986ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 75.0478ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (860ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (861ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1019.6402ms
Executed DbCommand (47ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Request finished in 1213.6512ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1090.7576ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1299.8709ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 273.6069ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (949ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (25ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1091.5488ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1433.8739ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 41.9264ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 62.2766ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (878ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (901ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (36ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1093.0763ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1118.4001ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1319.1036ms 200 application/json; charset=utf-8
Request finished in 1356.8209ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 2205.9057ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,062ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (69ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1279.0849ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1492.0408ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 56.8727ms 204 
Request finished in 83.945ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,148ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed executing DbCommand (55,649ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
CORS policy execution successful.
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 121.7546ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (982ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (78ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 3429.4243ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 4062.1978ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 56.1782ms 204 
Request finished in 72.818ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,122ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1,176ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (23ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (75ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (88ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1463.1654ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1469.5601ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1667.4258ms 200 application/json; charset=utf-8
Request finished in 1662.8882ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/register  
CORS policy execution successful.
Request finished in 38.4381ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/register application/json;charset=UTF-8 48
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Route matched with {action = "Register", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (30ms) [Parameters=[@__user_Username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Username] = @__user_Username_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
Executed DbCommand (3,685ms) [Parameters=[@p0='?' (Size = 8000) (DbType = Binary), @p1='?' (Size = 8000) (DbType = Binary), @p2='?' (Size = 4000), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([PasswordHash], [PasswordSalt], [ProfileImageUrl], [Username])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API) in 8183.339ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Request finished in 8278.3752ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/0/2020/2  
CORS policy execution successful.
Request finished in 25.3812ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/0/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Failed executing DbCommand (27ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
An exception occurred in the database while saving changes for context type 'DiaryApp.Core.ApplicationContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_PageBase_Users_UserID". The conflict occurred in database "DiaryApp", table "dbo.Users", column 'ID'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:b6294cf7-4537-4948-8808-051a6e34ea8d
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
09.02.2020 9:28:31 An error occurred while updating the entries. See the inner exception for details. 
    at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at DiaryApp.Data.Services.CrudService`1.Create(TEntity entity) in E:\repos\diaryApp\diary-app-backend\DiaryApp.Data\Services\CrudService.cs:line 22
   at DiaryApp.API.Controllers.MainPageController.CreateNewPage(PageParams pageParams) in E:\repos\diaryApp\diary-app-backend\DiaryApp.API\Controllers\MainPageController.cs:line 65
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 544.4308ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 648.0533ms 500 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/0/2020/2  
CORS policy execution successful.
Request finished in 167.5184ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/0/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/0/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (36ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 79.4958ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 48
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (27ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 1758.9667ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 1916.3363ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/2/2020/2  
CORS policy execution successful.
Request finished in 46.2903ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/2/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (14ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (25ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLists] ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [EventLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (30ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 81398.6227ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 81598.8129ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/5  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/5  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 40.9644ms 204 
Request finished in 54.5097ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/5  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/5  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 228.727ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 247.4569ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 419.8688ms 200 application/json; charset=utf-8
Request finished in 447.0631ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/register  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 82.9077ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/register application/json;charset=UTF-8 59
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Route matched with {action = "Register", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (30ms) [Parameters=[@__user_Username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Username] = @__user_Username_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 8000) (DbType = Binary), @p1='?' (Size = 8000) (DbType = Binary), @p2='?' (Size = 4000), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([PasswordHash], [PasswordSalt], [ProfileImageUrl], [Username])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API) in 4546.1381ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Register (DiaryApp.API)'
Request finished in 4723.8941ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/3/2020/2  
CORS policy execution successful.
Request finished in 25.7263ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/3/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLists] ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [EventLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 305.885ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 506.9896ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/6  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/6  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 76.1727ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/6  
Request finished in 96.605ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/6  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 212.9766ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 232.5411ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 430.4359ms 200 application/json; charset=utf-8
Request finished in 463.6081ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 110.9356ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (41ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (59ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (42ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 4185.0994ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 4613.1598ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 29.241ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (29ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 204.8057ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 417.1061ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 66.7142ms 204 
Request finished in 76.3242ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (5ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 264.0976ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 262.7171ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 455.422ms 200 application/json; charset=utf-8
Request finished in 449.8181ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 337.3039ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 98.7188ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 234.1963ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 41.4999ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request finished in 55.5348ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 146.2737ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 145.4872ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 343.1342ms 200 application/json; charset=utf-8
Request finished in 340.8395ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 303.5269ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 89.0389ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 227.5653ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 35.9147ms 204 
Request finished in 50.1961ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 139.9295ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 138.4515ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 325.1825ms 200 application/json; charset=utf-8
Request finished in 320.384ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 31.3026ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 67
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 321.9492ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 431.1479ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 59.4524ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 96.5879ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 273.7639ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 44.6906ms 204 
Request finished in 71.7275ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 149.6653ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 148.0554ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 349.3004ms 200 application/json; charset=utf-8
Request finished in 344.7108ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 411.5434ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 158.7444ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 365.149ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 62.6631ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 91.1507ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 170.1452ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 168.215ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 477.4379ms 200 application/json; charset=utf-8
Request finished in 458.7831ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 50.3057ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 98.2989ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 217.4246ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 63.3824ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 78.7139ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 161.5357ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 160.2797ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 396.6521ms 200 application/json; charset=utf-8
Request finished in 394.0725ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 437.6928ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 91.2364ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 239.0744ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 44.3365ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 56.1642ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 157.3366ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 157.2751ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 375.395ms 200 application/json; charset=utf-8
Request finished in 366.5693ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 46.5001ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 101.4205ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 261.4542ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 92.8609ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 107.7115ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 185.1016ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 182.9225ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 445.7732ms 200 application/json; charset=utf-8
Request finished in 435.5439ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 104.2756ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 238.0709ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (14ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 261.9858ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 259.1036ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 547.701ms 200 application/json; charset=utf-8
Request finished in 560.8941ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/updateTodo  
CORS policy execution successful.
Request finished in 45.7002ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/todo/updateTodo application/json;charset=UTF-8 97
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Route matched with {action = "UpdateTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Todos] SET [Done] = @p0, [OwnerID] = @p1, [Subject] = @p2, [Url] = @p3
WHERE [ID] = @p4;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API) in 93.6634ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Request finished in 206.4411ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 343.3258ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 105.2616ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 316.2714ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 47.328ms 204 
Request finished in 61.048ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 160.9081ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 159.6811ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 373.157ms 200 application/json; charset=utf-8
Request finished in 363.2941ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 398.7899ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 150.0901ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 304.7861ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 45.7936ms 204 
Request finished in 70.8143ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 200.3383ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 200.3875ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 477.978ms 200 application/json; charset=utf-8
Request finished in 477.8147ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 67.8205ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 123.8852ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 291.8533ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 60.4346ms 204 
Request finished in 76.6814ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 202.9396ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 207.663ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 486.3145ms 200 application/json; charset=utf-8
Request finished in 482.8995ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/updateTodo  
CORS policy execution successful.
Request finished in 31.4652ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/todo/updateTodo application/json;charset=UTF-8 97
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Route matched with {action = "UpdateTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Todos] SET [Done] = @p0, [OwnerID] = @p1, [Subject] = @p2, [Url] = @p3
WHERE [ID] = @p4;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API) in 85.2935ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Request finished in 201.848ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 51.2344ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 47.285ms 204 
Request finished in 60.6473ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 164.8178ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 162.9043ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 402.4323ms 200 application/json; charset=utf-8
Request finished in 401.6876ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 288.0394ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 80.5886ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 225.6367ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 38.7871ms 204 
Request finished in 50.6171ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 151.4434ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 149.6484ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 340.0316ms 200 application/json; charset=utf-8
Request finished in 365.53ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/updateTodo  
CORS policy execution successful.
Request finished in 28.7779ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/todo/updateTodo application/json;charset=UTF-8 97
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Route matched with {action = "UpdateTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Todos] SET [Done] = @p0, [OwnerID] = @p1, [Subject] = @p2, [Url] = @p3
WHERE [ID] = @p4;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API) in 85.6122ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Request finished in 196.6735ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 45.3819ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 97.964ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 231.3947ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 51.8855ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 65.727ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 177.5003ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 179.3709ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 393.7333ms 200 application/json; charset=utf-8
Request finished in 390.0372ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 291.4264ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 108.9384ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 248.6538ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 41.2166ms 204 
Request finished in 54.2967ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 153.3507ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 155.915ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 373.3323ms 200 application/json; charset=utf-8
Request finished in 369.2335ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 315.9451ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 90.4586ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 226.5516ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 43.341ms 204 
Request finished in 58.5748ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 161.8374ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 165.3323ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 381.92ms 200 application/json; charset=utf-8
Request finished in 381.8532ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 49.2515ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 89.8122ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 221.4575ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 51.6307ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 63.4148ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 159.7842ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 162.4116ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 383.4046ms 200 application/json; charset=utf-8
Request finished in 382.1005ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 346.5497ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 93.5287ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 314.3223ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 45.3853ms 204 
Request finished in 58.4545ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 199.8571ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 205.1233ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 463.641ms 200 application/json; charset=utf-8
Request finished in 460.2611ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 302.2071ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 97.8911ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 293.7603ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 54.215ms 204 
Request finished in 67.6346ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 167.9091ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 167.8547ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 391.9405ms 200 application/json; charset=utf-8
Request finished in 393.1757ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 31.2432ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 115.5334ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 237.1882ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 111.1147ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 221.3552ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 60.7075ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 93.5193ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 503.9911ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 42.9435ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 61.4089ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 187.2604ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 192.3977ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 431.2245ms 200 application/json; charset=utf-8
Request finished in 429.9954ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 97.4187ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 269.6767ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 213.4679ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 210.937ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 474.5179ms 200 application/json; charset=utf-8
Request finished in 487.9056ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 65.2935ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 105.9391ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 246.2419ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 56.8313ms 204 
Request finished in 70.9241ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 173.1654ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 173.9722ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 394.0101ms 200 application/json; charset=utf-8
Request finished in 393.8396ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 45.1311ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 101.3316ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 251.0267ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 60.4124ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 74.3847ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 172.9393ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 172.9414ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 405.8538ms 200 application/json; charset=utf-8
Request finished in 399.7882ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/updateTodo  
CORS policy execution successful.
Request finished in 286.7098ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/todo/updateTodo application/json;charset=UTF-8 119
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Route matched with {action = "UpdateTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Todos] SET [Done] = @p0, [OwnerID] = @p1, [Subject] = @p2, [Url] = @p3
WHERE [ID] = @p4;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API) in 90.4066ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Request finished in 206.3755ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 318.6885ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 122.8174ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 283.2436ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 50.8241ms 204 
Request finished in 80.8266ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 223.4804ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 219.4303ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 558.2502ms 200 application/json; charset=utf-8
Request finished in 541.0189ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 364.851ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 97.9458ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 228.983ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 41.3091ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 57.4342ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 211.0585ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 210.9898ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 456.4332ms 200 application/json; charset=utf-8
Request finished in 453.8593ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 109.0743ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (44ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 2499.075ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 3027.3122ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 68.4683ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 78.8539ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 256.0067ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 284.6959ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 525.3359ms 200 application/json; charset=utf-8
Request finished in 569.2193ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/updateTodo  
CORS policy execution successful.
Request finished in 605.6918ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/todo/updateTodo application/json;charset=UTF-8 119
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Route matched with {action = "UpdateTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Todos] SET [Done] = @p0, [OwnerID] = @p1, [Subject] = @p2, [Url] = @p3
WHERE [ID] = @p4;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API) in 240.4501ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Request finished in 459.2672ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 532.5809ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 109.4903ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 291.5096ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 86.0135ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 107.2511ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 215.4866ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 208.6267ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 490.1926ms 200 application/json; charset=utf-8
Request finished in 481.516ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/updateTodo  
CORS policy execution successful.
Request finished in 448.2876ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/todo/updateTodo application/json;charset=UTF-8 97
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Route matched with {action = "UpdateTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Todos] SET [Done] = @p0, [OwnerID] = @p1, [Subject] = @p2, [Url] = @p3
WHERE [ID] = @p4;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API) in 104.9976ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodo (DiaryApp.API)'
Request finished in 243.0708ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 535.5576ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 207.5167ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 466.9533ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 56.7346ms 204 
Request finished in 75.5096ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 358.8853ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 374.6264ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 764.1692ms 200 application/json; charset=utf-8
Request finished in 769.8888ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
CORS policy execution successful.
Request finished in 515.8738ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 146.2978ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 284.5462ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 29.7999ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 73
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 182.7927ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 325.6797ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 63.4926ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 126.1592ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 302.9211ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 54.6297ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 72.8836ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 182.4812ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 186.0344ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 472.6305ms 200 application/json; charset=utf-8
Request finished in 459.9692ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 127.7885ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (47ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 2491.3263ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 3132.4328ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 86.6969ms 204 
Request finished in 107.761ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 168.3194ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Successfully validated the token.
Successfully validated the token.
CORS policy execution successful.
Authorization was successful.
Authorization was successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request finished in 255.8814ms 204 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (14ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (7ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 471.3576ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 1077.7408ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 761.5969ms
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request finished in 1254.6357ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 816.1978ms
Executed DbCommand (19ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1222.4137ms 200 application/json; charset=utf-8
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 629.6645ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1605.1195ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/  
CORS policy execution successful.
Request finished in 674.5109ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/events/ application/json;charset=UTF-8 41
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
Route matched with {action = "UpdateEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Events] SET [Date] = @p0, [Description] = @p1, [OwnerID] = @p2, [Subject] = @p3, [Url] = @p4
WHERE [ID] = @p5;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API) in 493.8044ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
An unhandled exception has occurred while executing the request.
Request finished in 944.7759ms 500 text/plain
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/  
CORS policy execution successful.
Request finished in 77.5461ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/events/ application/json;charset=UTF-8 41
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
Route matched with {action = "UpdateEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Events] SET [Date] = @p0, [Description] = @p1, [OwnerID] = @p2, [Subject] = @p3, [Url] = @p4
WHERE [ID] = @p5;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API) in 211.9305ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
An unhandled exception has occurred while executing the request.
Request finished in 372.4069ms 500 text/plain
Request starting HTTP/1.1 PUT http://localhost:5001/api/events/ application/json;charset=UTF-8 61
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
Route matched with {action = "UpdateEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Events] SET [Date] = @p0, [Description] = @p1, [OwnerID] = @p2, [Subject] = @p3, [Url] = @p4
WHERE [ID] = @p5;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API) in 219.3326ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
An unhandled exception has occurred while executing the request.
Request finished in 423.1795ms 500 text/plain
Request starting HTTP/1.1 PUT http://localhost:5001/api/events/ application/json;charset=UTF-8 41
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
Route matched with {action = "UpdateEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Events] SET [Date] = @p0, [Description] = @p1, [OwnerID] = @p2, [Subject] = @p3, [Url] = @p4
WHERE [ID] = @p5;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API) in 214.1266ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.UpdateEvent (DiaryApp.API)'
An unhandled exception has occurred while executing the request.
Request finished in 442.9962ms 500 text/plain
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 562.0367ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 134.9474ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 305.5814ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 108.8377ms 204 
CORS policy execution successful.
Request finished in 89.101ms 204 
CORS policy execution successful.
Request finished in 167.6903ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 276.2984ms 204 
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
CORS policy execution successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (12ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 324.8994ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 464.2644ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 865.7411ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
CORS policy execution successful.
Request finished in 924.4428ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 473.5845ms
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Request finished in 865.6362ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (24ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 269.8297ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1350.2779ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 521.763ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 125.6497ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 279.246ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 96.9683ms 204 
Request finished in 118.6208ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 167.8531ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 253.9093ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Successfully validated the token.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 375.7482ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 418.8167ms
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 759.4485ms 200 application/json; charset=utf-8
Request finished in 949.3654ms 200 application/json; charset=utf-8
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 741.2732ms
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 1142.9377ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 454.1565ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1330.1157ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 76.6028ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 219.6721ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 469.3103ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 142.2804ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 166.7031ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 257.2585ms 204 
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Successfully validated the token.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (5ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 410.8543ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 370.8104ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request finished in 880.2555ms 200 application/json; charset=utf-8
Request finished in 886.9063ms 200 application/json; charset=utf-8
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 484.2093ms
Request finished in 1143.3771ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 968.4738ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 185.6749ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 452.2045ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 1016.4014ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,222ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (9ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 8621.8724ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 8887.246ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 72.0294ms 204 
Request finished in 89.5338ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 133.44ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 216.9446ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 301.4678ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 332.1371ms
Request finished in 694.5803ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 387.884ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 708.7263ms 200 application/json; charset=utf-8
Request finished in 876.7974ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 178.2626ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1190.0565ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 780.2579ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 110.8385ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 340.7207ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 96.0997ms 204 
Request finished in 84.9767ms 204 
CORS policy execution successful.
CORS policy execution successful.
Request finished in 130.5869ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 181.7718ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 342.1112ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 391.5244ms
Request finished in 769.2526ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 450.6092ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 944.2543ms 200 application/json; charset=utf-8
Request finished in 891.9351ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 205.7669ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1329.9856ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 779.0191ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 120.1054ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 292.7367ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 78.4472ms 204 
Request finished in 101.7393ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 173.2308ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 241.6993ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 429.0543ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 397.2252ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request finished in 853.2811ms 200 application/json; charset=utf-8
Request finished in 793.2406ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 550.9957ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Request finished in 1040.6556ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 173.3459ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1341.5779ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 668.7521ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 396.9105ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 676.5226ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 93.5597ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 112.9186ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 353.044ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 348.8107ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 700.6698ms 200 application/json; charset=utf-8
Request finished in 696.1206ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 51.6365ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 134.3669ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 338.5631ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 62.196ms 204 
Request finished in 82.4446ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 251.8342ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 247.0324ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 585.1713ms 200 application/json; charset=utf-8
Request finished in 682.6778ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 375.3424ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 118.2788ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 268.9672ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 91.8566ms 204 
Request finished in 114.9632ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 188.6051ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 272.8126ms 204 
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Successfully validated the token.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 414.041ms
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Request finished in 830.1262ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 590.3766ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 1153.1226ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 717.3992ms
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request finished in 1107.9541ms 200 application/json; charset=utf-8
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 336.6826ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1471.2162ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 1021.5975ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 127.7761ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 297.2432ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 98.6266ms 204 
Request finished in 117.2383ms 204 
Request finished in 81.763ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 272.9614ms 204 
Authorization was successful.
Successfully validated the token.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Successfully validated the token.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 403.7538ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 555.4513ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 515.9181ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 881.0183ms 200 application/json; charset=utf-8
Request finished in 1098.3855ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 1137.9318ms 200 application/json; charset=utf-8
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 188.7818ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1527.2009ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 888.4078ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 192.263ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 497.0718ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 436.0363ms 204 
Request finished in 441.6663ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 499.3835ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 605.0894ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 396.4221ms
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 505.616ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 868.0894ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 592.277ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 1036.1571ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 1265.0796ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 200.3204ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1671.522ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 142.3995ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 200.924ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 479.6724ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 101.6745ms 204 
Request finished in 122.8906ms 204 
CORS policy execution successful.
CORS policy execution successful.
Request finished in 179.8597ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 201.6172ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 387.0873ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 459.8944ms
Request finished in 831.2057ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 508.742ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 1003.2636ms 200 application/json; charset=utf-8
Request finished in 947.3551ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 207.0602ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1444.2938ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 765.5654ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 125.6813ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 285.3031ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 102.4658ms 204 
Request finished in 119.9107ms 204 
Request finished in 82.1166ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 218.0426ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 333.8565ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 427.3644ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request finished in 775.5576ms 200 application/json; charset=utf-8
Request finished in 940.6326ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 512.3517ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Request finished in 1040.2364ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 151.6713ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1293.9828ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 44.1146ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 103.2559ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 263.1395ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 58.8685ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 75.7441ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 229.1212ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 231.1669ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 526.4017ms 200 application/json; charset=utf-8
Request finished in 525.776ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 42.1181ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 112.1584ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 263.5561ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 74.9251ms 204 
Request finished in 86.4246ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 133.8859ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Authorization was successful.
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 369.4325ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 450.2516ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Request finished in 765.0485ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 251.5383ms 204 
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 374.0323ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 893.3364ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 794.6599ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 181.058ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1295.3226ms 200 application/json; charset=utf-8
