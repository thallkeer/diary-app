User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 68.2145ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (36ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 1905.317ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 2257.8877ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 42.4844ms 204 
Request finished in 55.3236ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 88.7241ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 99.9805ms 204 
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Authorization was successful.
CORS policy execution successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Successfully validated the token.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 272.8849ms
Failed executing DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Color], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request finished in 486.9773ms 200 application/json; charset=utf-8
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
An exception occurred while iterating over the results of a query for context type 'DiaryApp.Core.ApplicationContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Color'.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.InitializeReader(DbContext _, Boolean result)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
ClientConnectionId:4f579985-5a7f-4620-aec4-61540e057c54
Error Number:207,State:1,Class:16
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 76.7904ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (46ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 1996.5539ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 2366.8607ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 71.4835ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 85.3851ms 204 
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Successfully validated the token.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 129.9161ms 204 
Authorization was successful.
Request finished in 148.3035ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Successfully validated the token.
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Authorization was successful.
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 393.9099ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 370.0754ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Request finished in 644.7685ms 200 application/json; charset=utf-8
Request finished in 595.9924ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 253.8139ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 530.851ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 749.9793ms 200 application/json; charset=utf-8
Request finished in 716.3487ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 29.2017ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/habitTracker application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Route matched with {action = "AddTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [HabitsTrackers] ([GoalName], [GoalsAreaID], [SelectedDays])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [HabitsTrackers]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API) in 198.765ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Request finished in 291.6377ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 113.9867ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (96ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (58ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 4286.4271ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 4960.048ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 60.5183ms 204 
Request finished in 66.3606ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 115.1792ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 132.2619ms 204 
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Authorization was successful.
CORS policy execution successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Authorization was successful.
CORS policy execution successful.
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Successfully validated the token.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 204.5702ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 430.1911ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 783.3847ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 523.8881ms
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 760.5841ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 824.2861ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 721.4534ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 983.0778ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 83.328ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/habitTracker application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Route matched with {action = "AddTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [HabitsTrackers] ([GoalName], [GoalsAreaID], [SelectedDays])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [HabitsTrackers]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API) in 197.0621ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Request finished in 283.232ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 105.4412ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 91.5976ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 223.2399ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 57.8328ms 204 
CORS policy execution successful.
Request finished in 68.4974ms 204 
Request finished in 100.5114ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 193.7105ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 172.3092ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Request finished in 505.7156ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 233.3752ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 235.2341ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
Request finished in 576.0612ms 200 application/json; charset=utf-8
Request finished in 506.1492ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 149.244ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 882.371ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 119.4038ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (857ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (50ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 982.5128ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 1152.1873ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 52.9647ms 204 
Request finished in 68.4956ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 40.5271ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 166.4584ms 204 
Authorization was successful.
Successfully validated the token.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Authorization was successful.
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (24ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Successfully validated the token.
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Authorization was successful.
Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (13ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (26ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (58ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 288.6325ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 375.7355ms
Request finished in 593.5402ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 308.4751ms
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 672.3814ms 200 application/json; charset=utf-8
Request finished in 565.5136ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 295.0729ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 808.3259ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 57.9706ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (864ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 957.9895ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 1095.5129ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 58.5117ms 204 
Request finished in 70.7842ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 103.0606ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (9ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Successfully validated the token.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 225.6362ms
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 272.9921ms
Request finished in 488.5512ms 200 application/json; charset=utf-8
Authorization was successful.
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Request finished in 627.3194ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request finished in 399.9479ms 204 
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 592.507ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 308.6192ms
Request finished in 870.5714ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 560.5262ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 170.6736ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (10ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 287.2087ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 488.0742ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 112.2507ms 204 
Request finished in 121.5207ms 204 
CORS policy execution successful.
CORS policy execution successful.
Request finished in 149.2786ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 192.7228ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
CORS policy execution successful.
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Successfully validated the token.
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Authorization was successful.
Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 595.313ms
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 629.0699ms
Request finished in 921.8887ms 200 application/json; charset=utf-8
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Request finished in 1091.8511ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 284.5161ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 891.0217ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1217.4036ms 200 application/json; charset=utf-8
Request finished in 1191.1853ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 160.5087ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 918.7682ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 1478.5401ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 90.207ms 204 
Request finished in 103.84ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 171.1571ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 249.451ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
CORS policy execution successful.
Executed DbCommand (63ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (23ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (23ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (16ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Successfully validated the token.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (53ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 512.5995ms
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Request finished in 1088.8238ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 702.0474ms
Authorization was successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 647.4892ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1301.486ms 200 application/json; charset=utf-8
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request finished in 1174.0567ms 200 application/json; charset=utf-8
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 274.8516ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1615.6674ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 161.2572ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 113.1105ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 360.93ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 101.7762ms 204 
Request finished in 119.243ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 166.4129ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 226.8011ms 204 
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Successfully validated the token.
Authorization was successful.
CORS policy execution successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 252.6905ms
CORS policy execution successful.
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Request finished in 579.9507ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 350.8303ms
Successfully validated the token.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 292.2189ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 736.8368ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 746.2512ms 200 application/json; charset=utf-8
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 166.6643ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 900.8787ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 282.7716ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 177.7391ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 1339.1426ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 200.9455ms 204 
Request finished in 157.1748ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 314.5658ms 204 
Request finished in 336.6133ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
CORS policy execution successful.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 495.111ms
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 559.4124ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 886.0645ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 565.3712ms
Successfully validated the token.
Request finished in 1016.2513ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Request finished in 1013.6618ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 209.3002ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1435.791ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 53.1573ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 119.0191ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 338.2982ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 285.1945ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 382.8067ms
Request finished in 676.8987ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 479.9073ms
Successfully validated the token.
Request finished in 810.4976ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Request finished in 885.6736ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 159.2561ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1152.3168ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 72.5855ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 164.1981ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 379.4778ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 88.724ms 204 
Request finished in 110.9811ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 160.0188ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 231.4222ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (9ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (5ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 288.1351ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 415.5592ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request finished in 647.472ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 435.3142ms
Request finished in 871.6813ms 200 application/json; charset=utf-8
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Request finished in 943.5307ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 160.7138ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1145.5617ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 178.3541ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 121.192ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 346.836ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 99.1772ms 204 
Request finished in 112.7384ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 161.7254ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 263.6662ms 204 
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Successfully validated the token.
Authorization was successful.
CORS policy execution successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 282.3241ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Request finished in 775.2504ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 410.1808ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 305.5322ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 932.5821ms 200 application/json; charset=utf-8
Successfully validated the token.
Request finished in 932.7884ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 140.0268ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1026.6561ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 284.8202ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (50ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 285.7011ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 587.0944ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 98.6342ms 204 
CORS policy execution successful.
Request finished in 112.3608ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 183.599ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
CORS policy execution successful.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 233.91ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 647.0551ms 204 
Successfully validated the token.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 578.8539ms 200 application/json; charset=utf-8
Authorization was successful.
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 413.2036ms
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request finished in 756.4853ms 200 application/json; charset=utf-8
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 549.7575ms
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Request finished in 970.3017ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 210.8487ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 507.9607ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 212.1939ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,238ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (47ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 1560.8376ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 1828.3787ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 112.6759ms 204 
Request finished in 129.3917ms 204 
CORS policy execution successful.
CORS policy execution successful.
Request finished in 150.4025ms 204 
Request finished in 199.8436ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 536.7422ms
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 614.9561ms
Request finished in 1045.0606ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 677.4809ms
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Request finished in 1077.3509ms 200 application/json; charset=utf-8
Request finished in 1163.5651ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 186.911ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 1499.5841ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 102.7152ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (74ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 303.9283ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 515.676ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 76.5126ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 93.0905ms 204 
Request finished in 200.1438ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Successfully validated the token.
Executed DbCommand (11ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (19ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 419.0509ms
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 481.178ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 775.0844ms 200 application/json; charset=utf-8
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Request finished in 835.995ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request finished in 346.2927ms 204 
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 657.5021ms
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Request finished in 1031.2512ms 200 application/json; charset=utf-8
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 267.6717ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1609.0868ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 143.1838ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 1329.8125ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 1494.4794ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Request finished in 72.1595ms 204 
Request finished in 115.2744ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 159.9098ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 229.2185ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Successfully validated the token.
Successfully validated the token.
CORS policy execution successful.
Authorization was successful.
Authorization was successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
CORS policy execution successful.
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 491.4009ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 560.0369ms
Request finished in 890.513ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Authorization was successful.
Request finished in 1091.7839ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 657.8083ms
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request finished in 1144.2381ms 200 application/json; charset=utf-8
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 139.6639ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 1172.1531ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 56.4441ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 118.2081ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 305.8567ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 245.1584ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 288.3266ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 576.3124ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 354.462ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 622.5972ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 689.3915ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 107.2352ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 892.5061ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 198.6235ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (17ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 1979.6845ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 2160.0557ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 158.8775ms 204 
Request finished in 175.8142ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 216.9119ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
CORS policy execution successful.
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Successfully validated the token.
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 366.2891ms
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 411.2005ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 747.0093ms 200 application/json; charset=utf-8
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request finished in 838.7679ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request finished in 628.2675ms 204 
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 749.7409ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 351.256ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1186.8861ms 200 application/json; charset=utf-8
Request finished in 764.8761ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 189.9915ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 147.213ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 292.4851ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.4044ms 204 
Request finished in 94.0975ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 133.4486ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 195.3057ms 204 
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Successfully validated the token.
Authorization was successful.
CORS policy execution successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (5ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 348.6814ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 296.2276ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 433.3305ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 696.0837ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 768.649ms 200 application/json; charset=utf-8
Request finished in 813.8674ms 200 application/json; charset=utf-8
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 122.1769ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 971.1565ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 48.2081ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 89.4211ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 223.3298ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 81.552ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 98.1823ms 204 
Request finished in 59.404ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Authorization was successful.
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request finished in 242.7104ms 204 
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 291.6335ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 385.8885ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 413.3927ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 595.0009ms 200 application/json; charset=utf-8
Request finished in 766.978ms 200 application/json; charset=utf-8
CORS policy execution successful.
Request finished in 803.271ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 125.5098ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1045.5175ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 78.7155ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 133.7854ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 297.4629ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 99.236ms 204 
Request finished in 106.0842ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 164.8239ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 233.1133ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 342.4833ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 425.3422ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 429.6642ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 686.2511ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 855.1253ms 200 application/json; charset=utf-8
Request finished in 880.3702ms 200 application/json; charset=utf-8
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 124.4445ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 1152.5535ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 90.8637ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 204.951ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 406.6145ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 119.0145ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 141.1224ms 204 
Request finished in 101.3657ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 323.0733ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 356.6145ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request finished in 766.066ms 200 application/json; charset=utf-8
Request finished in 803.4198ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 430.5167ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1003.9922ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 873.0406ms 200 application/json; charset=utf-8
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 110.6729ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 278.6423ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 56.1675ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 91.455ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 229.9977ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 82.1792ms 204 
Request finished in 99.4126ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Request finished in 68.7183ms 204 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 252.1452ms
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request finished in 616.7795ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 386.9856ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 469.2609ms
CORS policy execution successful.
Request finished in 795.2442ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 806.363ms 204 
Successfully validated the token.
Request finished in 871.2247ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 127.4513ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 379.3609ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 56.2367ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 146.4513ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 356.2679ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 102.6253ms 204 
Request finished in 119.397ms 204 
Request finished in 88.4878ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 221.1036ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Successfully validated the token.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 350.2854ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 432.2095ms
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 688.0375ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request finished in 871.9937ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 628.805ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 1000.5221ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 301.8995ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1061.2409ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 233.7672ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (23ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 187.3334ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 355.3708ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 133.2802ms 204 
Request finished in 157.7125ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Successfully validated the token.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request finished in 203.6809ms 204 
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request finished in 253.0148ms 204 
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Successfully validated the token.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Authorization was successful.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 415.5788ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 500.654ms
Authorization was successful.
Request finished in 849.4221ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (8ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 923.9769ms 200 application/json; charset=utf-8
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 938.5253ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 364.1839ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 1326.1921ms 200 application/json; charset=utf-8
Request finished in 1314.6093ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 112.8677ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (9ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 198.1571ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 440.4817ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 89.4802ms 204 
Request finished in 108.8293ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 175.0503ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Request finished in 635.9199ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Successfully validated the token.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 334.6465ms
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request finished in 740.0557ms 200 application/json; charset=utf-8
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 464.0674ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Request finished in 1045.9326ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 741.835ms
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Request finished in 1064.3753ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 474.7258ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 745.5015ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 267.2854ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 1122.0717ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 1284.9808ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 116.813ms 204 
Request finished in 126.9726ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 197.1077ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 293.9866ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 354.0189ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request finished in 771.5066ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 405.833ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 457.5835ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 885.9664ms 200 application/json; charset=utf-8
Successfully validated the token.
Request finished in 1153.9439ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 288.1214ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1597.1599ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 277.8309ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 159.012ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 297.074ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 63.9391ms 204 
Request finished in 77.4367ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 132.1967ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 207.731ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Successfully validated the token.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 326.1713ms
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 396.7386ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 693.0101ms 200 application/json; charset=utf-8
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Request finished in 871.145ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 665.3853ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 1005.8112ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 394.961ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1246.6204ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 93.9501ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 204.5403ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 692.4561ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 128.097ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 161.812ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Successfully validated the token.
Successfully validated the token.
CORS policy execution successful.
Authorization was successful.
Authorization was successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Request finished in 260.087ms 204 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 486.4275ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 520.2127ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request finished in 1008.4813ms 200 application/json; charset=utf-8
Request finished in 1075.6407ms 200 application/json; charset=utf-8
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 591.9091ms
Request finished in 1315.056ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 1111.7953ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 356.7543ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 608.7128ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 232.9223ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (51ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 321.0964ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 686.0778ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 132.2096ms 204 
Request finished in 157.6162ms 204 
Request finished in 107.9335ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Authorization was successful.
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 519.9784ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 415.2314ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 581.9597ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 1032.1052ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 332.6161ms 204 
Request finished in 838.0636ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 1202.2355ms 200 application/json; charset=utf-8
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 416.3272ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 3278.291ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 249.0344ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 163.0092ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 386.2785ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 187.0731ms 204 
Request finished in 209.5575ms 204 
Request finished in 166.8603ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 383.529ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Successfully validated the token.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Authorization was successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 425.1321ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 352.5458ms
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request finished in 1008.5269ms 200 application/json; charset=utf-8
Request finished in 831.2052ms 200 application/json; charset=utf-8
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 803.3221ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request finished in 1349.7035ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 405.5355ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1502.64ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 141.2158ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 107.0142ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 272.5144ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 76.646ms 204 
Request finished in 88.9291ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 144.6309ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 222.6731ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Successfully validated the token.
Successfully validated the token.
CORS policy execution successful.
Authorization was successful.
Authorization was successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 405.1963ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 400.4901ms
Request finished in 748.6966ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 482.7216ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 770.6212ms 200 application/json; charset=utf-8
Request finished in 931.0515ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 117.0244ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 1178.2968ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 55.7649ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 100.1435ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 251.7709ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 125.8811ms 204 
Request finished in 154.3268ms 204 
Request finished in 98.9714ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 292.648ms 204 
Successfully validated the token.
Successfully validated the token.
CORS policy execution successful.
Authorization was successful.
Authorization was successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 316.7468ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 317.8676ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 386.0529ms
Request finished in 742.9675ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 673.2863ms 200 application/json; charset=utf-8
CORS policy execution successful.
Request finished in 898.5841ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 182.1046ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1262.3531ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 69.0959ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 189.7794ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 508.1765ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 102.3396ms 204 
Request finished in 120.5731ms 204 
CORS policy execution successful.
CORS policy execution successful.
Request finished in 182.6065ms 204 
Request finished in 202.6442ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 377.2791ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request finished in 960.0704ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 496.0074ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 582.5402ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Request finished in 1070.5348ms 200 application/json; charset=utf-8
Request finished in 1172.7239ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 139.2035ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1426.7197ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 59.8042ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 109.0536ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 334.062ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 94.6073ms 204 
Request finished in 122.5743ms 204 
Request finished in 77.2957ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Successfully validated the token.
Authorization was successful.
CORS policy execution successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 362.6916ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 411.7561ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 803.8836ms 200 application/json; charset=utf-8
Request finished in 871.2827ms 200 application/json; charset=utf-8
Request finished in 267.8811ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 516.7137ms
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Request finished in 863.9426ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 119.0779ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 1284.3548ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 242.2747ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1381.5626ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1651.6406ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 56.8022ms 204 
Request finished in 74.4603ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 436.9692ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 453.3321ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 934.41ms 200 application/json; charset=utf-8
Request finished in 969.2981ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 87.3079ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 99.5397ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 243.7608ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.2076ms 204 
Request finished in 121.1941ms 204 
Request finished in 91.3407ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request finished in 212.0315ms 204 
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Authorization was successful.
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 300.6351ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 408.8712ms
Request finished in 744.4173ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
CORS policy execution successful.
Request finished in 855.5514ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Successfully validated the token.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 473.0739ms
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 949.1891ms 200 application/json; charset=utf-8
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 132.4229ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1040.3034ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 264.4698ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 118.4197ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 266.9095ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 86.2168ms 204 
Request finished in 104.2317ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 66.7557ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request finished in 229.6171ms 204 
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Authorization was successful.
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 360.94ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 389.3435ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 328.728ms
Request finished in 778.5752ms 200 application/json; charset=utf-8
Request finished in 814.5411ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 860.5577ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 169.5554ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1040.5481ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 35.0228ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/habitTracker application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Route matched with {action = "AddTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [HabitsTrackers] ([GoalName], [GoalsAreaID], [SelectedDays])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [HabitsTrackers]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API) in 226.9338ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Request finished in 361.8478ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 32.6239ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/habitTracker application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Route matched with {action = "AddTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [HabitsTrackers] ([GoalName], [GoalsAreaID], [SelectedDays])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [HabitsTrackers]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API) in 97.2676ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Request finished in 240.1363ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 49.9397ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 104.7459ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 248.6876ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 80.707ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 102.2574ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 163.1771ms 204 
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Successfully validated the token.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 285.8747ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 364.1407ms
Authorization was successful.
Request finished in 729.4061ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 652.5378ms 204 
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Request finished in 733.1078ms 200 application/json; charset=utf-8
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 725.5404ms
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Request finished in 1073.4555ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 279.165ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 638.904ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 35.2409ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/habitTracker application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Route matched with {action = "AddTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [HabitsTrackers] ([GoalName], [GoalsAreaID], [SelectedDays])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [HabitsTrackers]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API) in 119.9297ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Request finished in 265.8366ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 253.9412ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (18ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 182.5882ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 452.7711ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 94.0666ms 204 
CORS policy execution successful.
Request finished in 110.5095ms 204 
Request finished in 159.922ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Authorization was successful.
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 332.9236ms 204 
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 550.0602ms
Successfully validated the token.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 617.6454ms
Request finished in 1099.4895ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Request finished in 1167.9877ms 200 application/json; charset=utf-8
Authorization was successful.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 647.819ms
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request finished in 1071.0048ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 218.7354ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 1381.4986ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 230.7875ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 116.821ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 267.6947ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.4486ms 204 
Request finished in 91.5704ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 145.7981ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 211.2348ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 315.4809ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 363.7443ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 454.7643ms
Request finished in 683.2228ms 200 application/json; charset=utf-8
Request finished in 829.2893ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 870.3153ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 161.0754ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1225.5311ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 36.5228ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 103.7045ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 259.6175ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 49.6894ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 65.842ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 208.1675ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 210.1834ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 493.9918ms 200 application/json; charset=utf-8
Request finished in 494.8083ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 408.5107ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (35ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 792.3171ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1175.3573ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 108.6128ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 140.1557ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 325.7635ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 318.9149ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 813.4983ms 200 application/json; charset=utf-8
Request finished in 785.2599ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 85.6266ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 249.0271ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 495.4863ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 106.3328ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 135.816ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 458.8026ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 425.1138ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 831.2343ms 200 application/json; charset=utf-8
Request finished in 828.5223ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 115.2821ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 181.1066ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 445.4217ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 106.1229ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 134.8918ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 247.2269ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 245.0256ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 657.9746ms 200 application/json; charset=utf-8
Request finished in 655.3568ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 98.1388ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 235.711ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 795.7218ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 104.0392ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 141.5675ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 662.8759ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 662.7515ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1205.9105ms 200 application/json; charset=utf-8
Request finished in 1191.2999ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 447.5842ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (748ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (213ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1190.9474ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1497.6255ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 227.3401ms 204 
Request finished in 246.146ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (598ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (594ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (37ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (34ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (93ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (93ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 933.6264ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 932.9173ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1242.5567ms 200 application/json; charset=utf-8
Request finished in 1247.6209ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 334.0153ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,051ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (279ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1527.8411ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1818.5118ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 110.4973ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 139.6773ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,383ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1,418ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (115ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (106ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1728.401ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1765.0148ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 2129.9165ms 200 application/json; charset=utf-8
Request finished in 2182.0215ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 431.978ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,049ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (94ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1281.4689ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1471.7965ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 64.7208ms 204 
Request finished in 90.5231ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (896ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (922ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1107.804ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1142.7461ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1429.6203ms 200 application/json; charset=utf-8
Request finished in 1473.0299ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 74.4603ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 195.9356ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 418.951ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 67.0053ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 89.7687ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 336.576ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 333.3963ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 686.1339ms 200 application/json; charset=utf-8
Request finished in 724.3546ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 76.3252ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 174.7781ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 433.5851ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 63.1876ms 204 
Request finished in 80.9684ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 232.3016ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 234.7516ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 538.1076ms 200 application/json; charset=utf-8
Request finished in 536.0109ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 49.7826ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 124.5048ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 306.0299ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 64.4063ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 82.2246ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 244.3988ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 245.3035ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 553.8047ms 200 application/json; charset=utf-8
Request finished in 549.9339ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 36.3555ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 112.7234ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 268.9434ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 92.3768ms 204 
Request finished in 111.1617ms 204 
CORS policy execution successful.
CORS policy execution successful.
Request finished in 159.3497ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 177.5554ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 402.1534ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 418.5989ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 845.0976ms 200 application/json; charset=utf-8
Request finished in 928.2665ms 200 application/json; charset=utf-8
CORS policy execution successful.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Successfully validated the token.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 609.017ms
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1078.728ms 200 application/json; charset=utf-8
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 174.3527ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1280.5766ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 37.3715ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 112.6466ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 276.9365ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 58.6786ms 204 
Request finished in 76.524ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 227.257ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 227.9104ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 536.4129ms 200 application/json; charset=utf-8
Request finished in 546.6433ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 90.1649ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 205.7237ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 491.576ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 103.0358ms 204 
Request finished in 128.7351ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 289.3532ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 281.3789ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 718.9493ms 200 application/json; charset=utf-8
Request finished in 713.0877ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 42.8498ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 115.3845ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 283.4844ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 58.6947ms 204 
Request finished in 73.4584ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 228.0226ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 226.9051ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 526.2887ms 200 application/json; charset=utf-8
Request finished in 524.5535ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Request finished in 42.3256ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLists] ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [EventLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 397.5049ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 556.93ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 54.5041ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request finished in 70.4296ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 240.9371ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 241.048ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 533.7763ms 200 application/json; charset=utf-8
Request finished in 535.3699ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 209.0875ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 167.4034ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 416.9627ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 71.1262ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 96.3641ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 326.1671ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 328.9592ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 723.6998ms 200 application/json; charset=utf-8
Request finished in 769.9706ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 157.8173ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 239.5678ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 535.7102ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.9722ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 103.8157ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 269.0683ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 267.3028ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 669.1063ms 200 application/json; charset=utf-8
Request finished in 666.5419ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 643.6872ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 149.2154ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 363.0662ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 78.779ms 204 
Request finished in 97.8142ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 252.7148ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 253.3507ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 648.937ms 200 application/json; charset=utf-8
Request finished in 644.4504ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 131.5564ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 134.7374ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 391.1798ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 76.37ms 204 
Request finished in 103.9599ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 227.2105ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 227.9526ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 551.3187ms 200 application/json; charset=utf-8
Request finished in 544.178ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 75.9276ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 187.7371ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 421.0019ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 64.855ms 204 
Request finished in 86.651ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 242.566ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 240.0198ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 576.0282ms 200 application/json; charset=utf-8
Request finished in 568.6699ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 120.8127ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 161.7099ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 400.1581ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 112.9882ms 204 
Request finished in 130.2378ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (930ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (968ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (23ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (102ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed DbCommand (149ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1273.8176ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1349.5575ms
Request finished in 1600.3428ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1695.4185ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 42.183ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 145.6308ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 325.0343ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 61.2876ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request finished in 79.3684ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 233.299ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 234.1133ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 528.0353ms 200 application/json; charset=utf-8
Request finished in 563.8735ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Request finished in 53.1988ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 118.7867ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 288.3055ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 61.6371ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
Request finished in 80.2563ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 233.9596ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 235.0901ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 555.0936ms 200 application/json; charset=utf-8
Request finished in 553.7487ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 59.1505ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 149.5944ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 332.7572ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 63.3834ms 204 
Request finished in 86.898ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 237.6065ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 237.8478ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 582.7444ms 200 application/json; charset=utf-8
Request finished in 578.8054ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 39.9965ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 122.418ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 286.3753ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 66.9833ms 204 
Request finished in 84.6953ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 246.8025ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 247.9309ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 603.2462ms 200 application/json; charset=utf-8
Request finished in 608.983ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Request finished in 41.8653ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 127.5123ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 300.9897ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 60.8408ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request finished in 79.0219ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 231.2268ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 232.5678ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 531.8886ms 200 application/json; charset=utf-8
Request finished in 530.9521ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 40.3145ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 82
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (35ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 427.8471ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 615.608ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 73.0391ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 134.3001ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 340.9951ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 77.9332ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 97.9381ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 248.4958ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 248.7118ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 570.1003ms 200 application/json; charset=utf-8
Request finished in 570.5382ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 71.9946ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 129.4544ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 308.6103ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 57.0402ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request finished in 76.1656ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 244.9049ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 245.7077ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 560.9099ms 200 application/json; charset=utf-8
Request finished in 557.1939ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Request finished in 37.9816ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 129.3685ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 308.3527ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 82.8105ms 204 
Request finished in 117.3123ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 283.8156ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 282.6035ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 746.8306ms 200 application/json; charset=utf-8
Request finished in 736.0007ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 45.2084ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 89
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 160.2069ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 338.3511ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 73.1368ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 170.4403ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 361.0111ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 64.541ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 85.744ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 250.8018ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 250.5566ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 602.2403ms 200 application/json; charset=utf-8
Request finished in 594.4001ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 48.8308ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 154.0057ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 338.6243ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 68.9991ms 204 
Request finished in 90.6194ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
CORS policy execution successful.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Request finished in 103.7492ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 289.4014ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 308.9936ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Successfully validated the token.
Request finished in 727.6691ms 200 application/json; charset=utf-8
Request finished in 724.3783ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 139.7084ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 481.1881ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 58.3961ms 204 
Request finished in 77.1359ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 250.9459ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 249.8476ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 596.6312ms 200 application/json; charset=utf-8
Request finished in 593.4786ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 346.6786ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 142.8457ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 337.9839ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 57.7339ms 204 
Request finished in 75.4278ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 289.054ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 294.9924ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 614.9496ms 200 application/json; charset=utf-8
Request finished in 622.9977ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 410.8508ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 164.7402ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 371.9822ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 91.2008ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 112.4812ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 325.46ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 323.4894ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 694.2012ms 200 application/json; charset=utf-8
Request finished in 733.7902ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 100.3001ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 127.7237ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 383.1603ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 61.1591ms 204 
Request finished in 79.8887ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 257.4501ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 256.4396ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 586.4084ms 200 application/json; charset=utf-8
Request finished in 624.186ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 382.7937ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 133.0613ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 304.5661ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 61.1898ms 204 
Request finished in 78.9855ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 250.9868ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 253.9022ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
Request finished in 591.1445ms 200 application/json; charset=utf-8
Request finished in 589.7866ms 200 application/json; charset=utf-8
CORS policy execution successful.
Request finished in 98.5796ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 122.0389ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 315.9459ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 62.5255ms 204 
Request finished in 82.2963ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 252.8841ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 252.114ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 596.5973ms 200 application/json; charset=utf-8
Request finished in 592.56ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/5  
CORS policy execution successful.
Request finished in 45.1789ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/5  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLists] ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [EventLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 202.4971ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 412.2728ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1003  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1003  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 64.117ms 204 
Request finished in 82.9027ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1003  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1003  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 265.5333ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 268.9769ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 613.6356ms 200 application/json; charset=utf-8
Request finished in 603.8619ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 124.2402ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 290.2165ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 255.0622ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 256.4064ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 552.4015ms 200 application/json; charset=utf-8
Request finished in 570.3399ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 51.9086ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 97
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 172.488ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 352.1381ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 331.2189ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 92
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 92
Failed to determine the https port for redirect.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 3037.3784ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (58ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 309.3958ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 543.2752ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 78.7157ms 204 
Request finished in 96.1876ms 204 
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
Executing ObjectResult, writing value of type 'System.Int32'.
CORS policy execution successful.
Successfully validated the token.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 29061.5801ms
Successfully validated the token.
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 30074.2761ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 319.9043ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 360.1362ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 872.6893ms 200 application/json; charset=utf-8
Request finished in 912.2996ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 43.8713ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 132.7929ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 325.3474ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 62.5871ms 204 
Request finished in 87.0997ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 267.3749ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 266.3328ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 614.7321ms 200 application/json; charset=utf-8
Request finished in 615.0447ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Request finished in 50.6251ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 148.202ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 338.4346ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.7929ms 204 
Request finished in 100.6117ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 264.3411ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 264.3543ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 618.0958ms 200 application/json; charset=utf-8
Request finished in 616.3965ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 54.739ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 83
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
CORS policy execution successful.
CORS policy execution successful.
Request finished in 390.6178ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 416.5399ms 204 
CORS policy execution successful.
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Successfully validated the token.
Executing ObjectResult, writing value of type 'System.Int32'.
Authorization was successful.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 216648.5246ms
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Request finished in 216893.4922ms 200 application/json; charset=utf-8
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 208.6998ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 643.6816ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 84.4861ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 111.9337ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 358.9665ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 348.0814ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 848.2694ms 200 application/json; charset=utf-8
Request finished in 860.0187ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 59.3101ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 142.9263ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 353.0041ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 59.7356ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request finished in 79.7471ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 327.174ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 333.6393ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 698.9286ms 200 application/json; charset=utf-8
Request finished in 698.8849ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Request finished in 59.4393ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 145.4463ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 368.5417ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 82.1279ms 204 
Request finished in 102.4116ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 315.6608ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 313.7339ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 709.2413ms 200 application/json; charset=utf-8
Request finished in 713.8768ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 509.8406ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 164.0963ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 388.167ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 105.2669ms 204 
Request finished in 135.9122ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 310.8109ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 310.5389ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 719.0395ms 200 application/json; charset=utf-8
Request finished in 715.0859ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 56.6764ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 168.2057ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 384.6773ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 84.1185ms 204 
Request finished in 106.4565ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 278.157ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 287.0085ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 733.077ms 200 application/json; charset=utf-8
Request finished in 733.2107ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Request finished in 50.2981ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 148.4676ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 360.0095ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 71.6614ms 204 
Request finished in 97.0858ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 330.9597ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 330.8742ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 768.0853ms 200 application/json; charset=utf-8
Request finished in 768.401ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 466.5075ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (89ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (19ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 640.7448ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1108.779ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 81.2391ms 204 
Request finished in 105.6105ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (8ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 284.8168ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 321.3319ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 650.7036ms 200 application/json; charset=utf-8
Request finished in 696.2283ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 46.5218ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 85
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 206.7818ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 394.0385ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 82.8556ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 151.4797ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 377.2704ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.8982ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 103.4214ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 284.582ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 281.5233ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 656.6458ms 200 application/json; charset=utf-8
Request finished in 658.1565ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 473.9787ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,054ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (270ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1502.6487ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1753.3718ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 127.8335ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 153.5147ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (613ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (697ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 995.2328ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1051.0968ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1494.0425ms 200 application/json; charset=utf-8
Request finished in 1542.8895ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 137.3814ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 214.9941ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 422.3442ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 90.5055ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 116.177ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 353.4516ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 351.6351ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 791.6151ms 200 application/json; charset=utf-8
Request finished in 793.1296ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 314.704ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 194.2424ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 445.8978ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 83.2206ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 106.2657ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 381.8607ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 375.6962ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 811.7281ms 200 application/json; charset=utf-8
Request finished in 863.8135ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 98.1512ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 255.8188ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 523.9663ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 104.176ms 204 
Request finished in 127.3077ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 290.4417ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 291.3214ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 713.1097ms 200 application/json; charset=utf-8
Request finished in 714.4251ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 458.4103ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 176.3019ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 397.1869ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 97.2339ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 119.7196ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 293.7384ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 297.4172ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 702.3326ms 200 application/json; charset=utf-8
Request finished in 699.8683ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/7  
CORS policy execution successful.
Request finished in 56.4258ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/7  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 212.6173ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request finished in 457.3262ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 473.3245ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 170.1306ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 428.2432ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 98.3789ms 204 
Request finished in 124.2399ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 287.6795ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 291.8281ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 665.6947ms 200 application/json; charset=utf-8
Request finished in 659.5943ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 50.8586ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 84
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
CORS policy execution successful.
CORS policy execution successful.
Request finished in 501.5837ms 204 
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
Request finished in 493.1652ms 204 
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
CORS policy execution successful.
Executing ObjectResult, writing value of type 'System.Int32'.
Successfully validated the token.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 677441.6595ms
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 677664.0444ms 200 application/json; charset=utf-8
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 158.9505ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 502.6504ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 90.4645ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 112.9819ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 296.0108ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 297.1624ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 668.9589ms 200 application/json; charset=utf-8
Request finished in 668.3292ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 68.8071ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 271.5372ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 484.4495ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 77.6362ms 204 
Request finished in 102.3602ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 293.7329ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 294.7401ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 665.9703ms 200 application/json; charset=utf-8
Request finished in 665.5834ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 48.8826ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 78
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
CORS policy execution successful.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 419.2379ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
CORS policy execution successful.
Executing ObjectResult, writing value of type 'System.Int32'.
Successfully validated the token.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 64058.0872ms
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 64287.2262ms 200 application/json; charset=utf-8
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 162.8039ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 482.2087ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 86.4211ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 110.466ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 303.3524ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 299.4804ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 708.6293ms 200 application/json; charset=utf-8
Request finished in 704.5474ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 49.4343ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 82
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 490.3552ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
CORS policy execution successful.
Executing ObjectResult, writing value of type 'System.Int32'.
Successfully validated the token.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 103714.4698ms
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 103953.1775ms 200 application/json; charset=utf-8
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 168.0296ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 487.3764ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 90.2218ms 204 
Request finished in 114.2098ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 298.2287ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 305.0413ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 686.1479ms 200 application/json; charset=utf-8
Request finished in 682.7728ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 50.1394ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/x-www-form-urlencoded 72
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 159.0484ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 352.2141ms 415 application/problem+json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 93.5537ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 214.7914ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 468.2817ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 94.06ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 136.8679ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 298.0097ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 297.9325ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 669.5358ms 200 application/json; charset=utf-8
Request finished in 740.0433ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 49.54ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 72
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
CORS policy execution successful.
CORS policy execution successful.
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 541.1784ms 204 
Request finished in 527.9162ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
CORS policy execution successful.
CORS policy execution successful.
Executing ObjectResult, writing value of type 'System.Int32'.
Request finished in 676.7949ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
Request finished in 699.5942ms 204 
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 1273310.287ms
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
CORS policy execution successful.
Successfully validated the token.
Request finished in 1273611.2733ms 200 application/json; charset=utf-8
Request finished in 899.6214ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1039.8164ms 204 
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 177.8933ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 619.6942ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.6236ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 105.7859ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 306.5265ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 309.7933ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 730.0532ms 200 application/json; charset=utf-8
Request finished in 718.6773ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 171.0797ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 204.5405ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 496.7324ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 81.0633ms 204 
Request finished in 104.184ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 302.3701ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 302.7229ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 688.2965ms 200 application/json; charset=utf-8
Request finished in 687.4598ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 136.6935ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 195.7834ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 492.6635ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 88.7774ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 135.1333ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 319.4512ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 322.0446ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 852.1439ms 200 application/json; charset=utf-8
Request finished in 780.6604ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 50.3098ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 84
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (48ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (40ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (70ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 167300.3983ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 167499.0907ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 534.8434ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (51ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 321.0763ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 629.3613ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 100.6321ms 204 
Request finished in 78.3273ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 328.16ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 325.7353ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 745.3769ms 200 application/json; charset=utf-8
Request finished in 743.1415ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 68.3146ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,088ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (258ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1501.9186ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1784.2386ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 105.044ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 137.4501ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 386.1044ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 410.2193ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1045.5648ms 200 application/json; charset=utf-8
Request finished in 1036.3426ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 63.2367ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 174.0932ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 415.7736ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 72.4765ms 204 
Request finished in 91.821ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 319.3896ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 322.469ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 742.4046ms 200 application/json; charset=utf-8
Request finished in 739.0345ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 67.8634ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 201.9696ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 428.1857ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 100.269ms 204 
Request finished in 129.2442ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 342.9717ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 338.1435ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 789.633ms 200 application/json; charset=utf-8
Request finished in 783.3848ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 52.0582ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 197.5521ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 398.4021ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 65.5226ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 162.3581ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 382.6543ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.0796ms 204 
Request finished in 103.8316ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 330.8584ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 332.8209ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 749.8064ms 200 application/json; charset=utf-8
Request finished in 748.2206ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 153.1716ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (42ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (53ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executed DbCommand (53ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1372.1894ms
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 3043.7974ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1700.9636ms 200 application/json; charset=utf-8
Request finished in 4275.6731ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 92.0297ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 116.9148ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 399.7024ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 398.4541ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 802.5143ms 200 application/json; charset=utf-8
Request finished in 795.3865ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 59.1729ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 115.2352ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (37ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1950.3385ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 2435.0385ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 77.2638ms 204 
Request finished in 97.456ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 346.7673ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 344.385ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 758.9202ms 200 application/json; charset=utf-8
Request finished in 755.5924ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 59.3819ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 84
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,283ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (61ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (21ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (58ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 1849.5888ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 2078.1608ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 81.4739ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 200.5142ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 429.4657ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 76.197ms 204 
Request finished in 117.4975ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 305.3958ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 306.4895ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 717.8948ms 200 application/json; charset=utf-8
Request finished in 713.0244ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
Request finished in 58.1693ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/1  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 164.8857ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request finished in 371.3868ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 80.956ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 120
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 231.1997ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 443.1155ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 540.528ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,097ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (256ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1549.0809ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1799.4094ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 105.9565ms 204 
Request finished in 140.5712ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (141ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (121ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 466.0627ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 454.4197ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 929.8113ms 200 application/json; charset=utf-8
Request finished in 917.3221ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 131.7826ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 232.1503ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 544.5989ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 107.7408ms 204 
Request finished in 137.6583ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (7ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 730.2093ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 758.9632ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1374.6183ms 200 application/json; charset=utf-8
CORS policy execution successful.
Request finished in 1426.5126ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 207.1718ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 650.1338ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 503.6373ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 498.1278ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1021.9103ms 200 application/json; charset=utf-8
Request finished in 1050.1653ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 110.286ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (54ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 322.5672ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 621.4372ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 117.3265ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 150.0407ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 353.9778ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 354.8224ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 829.0802ms 200 application/json; charset=utf-8
Request finished in 817.8917ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 92.6865ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 231.1086ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 544.1033ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 84.3349ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 112.4773ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 425.7613ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 435.405ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 984.9134ms 200 application/json; charset=utf-8
Request finished in 980.363ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/11  
CORS policy execution successful.
Request finished in 60.6993ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/11  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 150.5491ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request finished in 364.3862ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/8  
CORS policy execution successful.
Request finished in 64.3899ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/8  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 157.6123ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request finished in 366.3089ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/9  
CORS policy execution successful.
Request finished in 51.3292ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/9  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 149.704ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request finished in 363.2611ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/10  
CORS policy execution successful.
Request finished in 55.5943ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/10  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 149.0993ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/12  
Request finished in 356.105ms 200 
CORS policy execution successful.
Request finished in 85.7214ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/12  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 151.2138ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request finished in 358.1597ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/13  
CORS policy execution successful.
Request finished in 55.6061ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/13  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 145.2332ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request finished in 364.8256ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 79.4361ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 184.2195ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 417.9653ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 117.1957ms 204 
Request finished in 148.068ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 373.5159ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 379.0755ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 816.4907ms 200 application/json; charset=utf-8
Request finished in 821.1846ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 89.3656ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 262.3992ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 525.4662ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 98.7119ms 204 
Request finished in 134.5475ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 324.8954ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 326.7761ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 778.7217ms 200 application/json; charset=utf-8
Request finished in 765.8631ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 190.4836ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 233.2207ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 617.0191ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 102.3416ms 204 
Request finished in 132.7782ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 315.949ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 316.2424ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 730.0202ms 200 application/json; charset=utf-8
Request finished in 731.0305ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 130.441ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (978ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (122ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1341.4959ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1767.6644ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 80.4609ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 103.6546ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 323.2086ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 323.9098ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 719.7182ms 200 application/json; charset=utf-8
Request finished in 765.215ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 68.0919ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 167.3437ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 402.6518ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 91.5013ms 204 
Request finished in 117.6753ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 340.7516ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 343.3118ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 770.5652ms 200 application/json; charset=utf-8
Request finished in 766.4293ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 133.4863ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 206.0158ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 492.6133ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 99.6225ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 124.9774ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 338.7304ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 340.0411ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 804.5083ms 200 application/json; charset=utf-8
Request finished in 803.9196ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 95.5364ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (9ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 209.0403ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 478.2591ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 86.9795ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 113.6683ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 325.6284ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 324.4889ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 759.1968ms 200 application/json; charset=utf-8
Request finished in 757.1526ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 103.8023ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 241.8423ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 530.7143ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 108.2142ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 139.8346ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 346.2757ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 344.3371ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 867.6653ms 200 application/json; charset=utf-8
Request finished in 863.6586ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 106.77ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 223.4106ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 584.8201ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 89.8804ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 121.8959ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 349.3911ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 346.3209ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 808.5131ms 200 application/json; charset=utf-8
Request finished in 800.7974ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 182.9433ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 432.9332ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 350.0249ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 350.3704ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 770.1367ms 200 application/json; charset=utf-8
Request finished in 797.3356ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 85.5331ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 199.9823ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 510.8391ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 103.5965ms 204 
Request finished in 134.8307ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 403.7579ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 402.1478ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1009.0957ms 200 application/json; charset=utf-8
Request finished in 1013.2007ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 74.0912ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 167.348ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 400.5841ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 82.9105ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 107.7976ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 360.1303ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 360.8003ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 789.6781ms 200 application/json; charset=utf-8
Request finished in 790.484ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 54.663ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 94
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 204.9656ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 421.7608ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 105.2873ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 190.5682ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 448.6437ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 84.599ms 204 
Request finished in 112.7824ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 345.1398ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 342.8122ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 753.9033ms 200 application/json; charset=utf-8
Request finished in 811.9728ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 87.8019ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 241.5769ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 566.9673ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 121.5599ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 154.6085ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 342.9107ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 344.2834ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 816.8415ms 200 application/json; charset=utf-8
Request finished in 810.7981ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 559.9358ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 203.4136ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 472.4411ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 97.3204ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 127.2092ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 902.6107ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 883.7637ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1368.0547ms 200 application/json; charset=utf-8
Request finished in 1422.2287ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Request finished in 59.4867ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLists] ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [EventLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 336.6989ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 571.3748ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1004  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1004  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 79.0988ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1004  
Request finished in 106.0501ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1004  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 341.4671ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 337.8153ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 767.9669ms 200 application/json; charset=utf-8
Request finished in 769.2598ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 113.8924ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,089ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (199ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1486.8086ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1816.8115ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 93.4247ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 125.4025ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 355.3046ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 354.9287ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 813.6767ms 200 application/json; charset=utf-8
Request finished in 800.8241ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Request finished in 55.986ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 162.6609ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 399.0816ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1004  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1004  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 76.0126ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1004  
Request finished in 101.0685ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1004  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 335.4105ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 335.6767ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 765.2448ms 200 application/json; charset=utf-8
Request finished in 762.6252ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 451.7458ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 191.5523ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 423.8711ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 87.5368ms 204 
Request finished in 114.4939ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 341.83ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 342.7988ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 789.3551ms 200 application/json; charset=utf-8
Request finished in 786.4242ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 90.6817ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 272.3691ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 585.2645ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 117.8048ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 161.6519ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 377.7203ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 374.1414ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 918.3177ms 200 application/json; charset=utf-8
Request finished in 907.9583ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Request finished in 61.7492ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 166.6625ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 402.0273ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1004  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1004  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 80.0328ms 204 
Request finished in 104.8854ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1004  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1004  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 350.069ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 351.2449ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 820.0306ms 200 application/json; charset=utf-8
Request finished in 818.3208ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 110.8663ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 250.4944ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 560.5289ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 116.7695ms 204 
Request finished in 156.5156ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 454.5802ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 447.2409ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 995.7475ms 200 application/json; charset=utf-8
Request finished in 979.9055ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 127.3909ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 254.3929ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 643.8814ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 120.9835ms 204 
Request finished in 158.2815ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 402.0875ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 394.3611ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1000.7933ms 200 application/json; charset=utf-8
Request finished in 988.8831ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Request finished in 57.3353ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 198.3954ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 439.8094ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1004  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1004  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 88.1357ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1004  
Request finished in 115.7694ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1004  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 360.0564ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 360.4904ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 821.3983ms 200 application/json; charset=utf-8
Request finished in 817.0592ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/0  
CORS policy execution successful.
Request finished in 60.8053ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/0  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [PageBase] ([Discriminator], [Month], [UserID], [Year])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [PageBase]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLists] ([DesiresAreaID], [IdeasAreaID], [PageID], [Title])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [EventLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 295.2342ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 535.389ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1005  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1005  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 83.61ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1005  
Request finished in 107.9029ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1005  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 350.3886ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 348.3794ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 811.4565ms 200 application/json; charset=utf-8
Request finished in 807.1495ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 139.1367ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (256ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 467.5749ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 874.6647ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 113.8227ms 204 
Request finished in 145.2429ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 359.4252ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 358.3282ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 948.9081ms 200 application/json; charset=utf-8
Request finished in 1107.7562ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Request finished in 63.0275ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/1  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 163.4767ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 402.4833ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1004  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1004  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 87.5297ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1004  
Request finished in 114.1937ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1004  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 367.6673ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 369.3612ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 824.4188ms 200 application/json; charset=utf-8
Request finished in 824.2213ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 150.8538ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 218.2483ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 483.8107ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 112.903ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 151.574ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 442.8346ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 448.8029ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1050.7309ms 200 application/json; charset=utf-8
Request finished in 1040.1962ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 495.0674ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 184.5564ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 500.2625ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 128.3439ms 204 
Request finished in 155.5258ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 399.8034ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 390.7854ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1110.5406ms 200 application/json; charset=utf-8
Request finished in 1209.013ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 164.4426ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 211.371ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 509.5408ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 121.4176ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 153.0985ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed DbCommand (35ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 354.519ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 500.033ms
Request finished in 909.9917ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1032.6988ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 56.2811ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 178.4717ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 488.2001ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 97.4346ms 204 
Request finished in 128.2812ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,030ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (156ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed DbCommand (1,279ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1514.5364ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed DbCommand (50ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Request finished in 2017.9741ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1705.0396ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 2194.2261ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Request finished in 70.897ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1,140ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (265ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1586.811ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1860.3495ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 116.9658ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1002  
Request finished in 148.27ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1002  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 380.4903ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 383.8498ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 867.3534ms 200 application/json; charset=utf-8
Request finished in 865.6027ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 79.8377ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 184.0842ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 437.6314ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 80.4412ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 108.1828ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 381.3103ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 380.4207ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 860.9337ms 200 application/json; charset=utf-8
Request finished in 861.153ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 131.2679ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 235.5576ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 537.8926ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 108.1718ms 204 
Request finished in 146.903ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 366.2035ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 368.6169ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 863.2509ms 200 application/json; charset=utf-8
Request finished in 852.6354ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 58.3046ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 883.6606ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 2091.8724ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 90.84ms 204 
Request finished in 120.334ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 350.7045ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 350.9032ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 809.4735ms 200 application/json; charset=utf-8
Request finished in 807.2965ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 123.0211ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (935ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1115.8049ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1418.5112ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 97.8636ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 133.3788ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 361.872ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 363.2748ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 855.6993ms 200 application/json; charset=utf-8
Request finished in 849.2012ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 67.3055ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 171.7896ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 423.6406ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 85.4578ms 204 
Request finished in 112.0748ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 382.7862ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 384.7491ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 855.3254ms 200 application/json; charset=utf-8
Request finished in 854.8934ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 57.6584ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 117
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 238.3843ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 476.459ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 78.0772ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 176.0477ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 410.9486ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 83.2416ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 114.8549ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 384.9594ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 379.9062ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 879.5126ms 200 application/json; charset=utf-8
Request finished in 873.4393ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Request finished in 61.9837ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 175.979ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 430.8072ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/2  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 80.8056ms 204 
Request finished in 109.6922ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/2  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/2  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 381.7123ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 383.2127ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 850.6505ms 200 application/json; charset=utf-8
Request finished in 853.5413ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 61.0318ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 174.4754ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 427.9448ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 84.3544ms 204 
Request finished in 112.2966ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 404.9807ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 413.1237ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 926.5941ms 200 application/json; charset=utf-8
Request finished in 935.108ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 660.8602ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1211.6262ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1667.9605ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 96.129ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 123.3636ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 389.7348ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 393.2363ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1036.7802ms 200 application/json; charset=utf-8
Request finished in 1033.9864ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 236.059ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Failed to validate the token.
Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]', Current time: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
Authorization failed.
AuthenticationScheme: Bearer was challenged.
22.02.2020 16:46:58  ?code=401 Error:  401
Request finished in 1170.872ms 401 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 389.2917ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (795ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (75ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 11478.5465ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 11735.8235ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 66.2478ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Failed to validate the token.
Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]', Current time: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
Authorization failed.
AuthenticationScheme: Bearer was challenged.
22.02.2020 16:47:36  ?code=401 Error:  401
Request finished in 311.5759ms 401 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 184.2324ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 221.2172ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 467.0495ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 60.0393ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (31ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 491.7499ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 889.5928ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 123.2387ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 156.2421ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (5ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (47ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 602.932ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 665.2868ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1200.3693ms 200 application/json; charset=utf-8
Request finished in 1273.3626ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 62.3669ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 67
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/3  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request finished in 133.7095ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/3  
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (23ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 537.396ms
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 687.8275ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 1007.6838ms 200 
Request finished in 1208.3851ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/4  
CORS policy execution successful.
Request finished in 63.1761ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/4  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 227.6744ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 500.8381ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 74.26ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 67
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 282.5484ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 616.1367ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 210.5126ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 262.754ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 602.8009ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 109.4978ms 204 
Request finished in 140.0339ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 434.0622ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 428.6147ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1054.4147ms 200 application/json; charset=utf-8
Request finished in 1056.1771ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2002  
CORS policy execution successful.
Request finished in 81.5632ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/2002  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 226.7579ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 491.5769ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 156.303ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 301.6635ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 675.5835ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 106.8279ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 142.0672ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 484.0043ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 483.216ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1149.9083ms 200 application/json; charset=utf-8
Request finished in 1151.3834ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/14  
CORS policy execution successful.
Request finished in 104.2426ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/events/14  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Route matched with {action = "DeleteEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task DeleteEvent(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Events]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API) in 235.7209ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.DeleteEvent (DiaryApp.API)'
Request finished in 538.8225ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 93.6013ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 83
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 336.3028ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 625.2756ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 61.9332ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 69
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 370.2522ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 646.6742ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1002  
CORS policy execution successful.
Request finished in 61.6822ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/1002  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 225.6049ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 480.3496ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/2003  
CORS policy execution successful.
Request finished in 70.5185ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/2003  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 229.1872ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 485.5596ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 98.6433ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 223.4219ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 558.3743ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 122.3499ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 165.9889ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 454.1923ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 575.2797ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1166.5781ms 200 application/json; charset=utf-8
Request finished in 1153.2087ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 61.9501ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 69
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 279.5886ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 531.7242ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 72.4052ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 228.9176ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 527.3115ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 123.2996ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 166.2709ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 478.1073ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 481.5793ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1095.2234ms 200 application/json; charset=utf-8
Request finished in 1083.2571ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 60.1039ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 225.574ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 509.3526ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 160.1605ms 204 
Request finished in 198.1613ms 204 
Request finished in 118.6022ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Authorization was successful.
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Request finished in 547.8106ms 204 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Successfully validated the token.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Authorization was successful.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 831.524ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 918.1142ms
Authorization was successful.
Request finished in 1781.4403ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 1858.6027ms 200 application/json; charset=utf-8
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 1104.8609ms
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Request finished in 1784.3417ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 652.771ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 2384.0046ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 63.249ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 71
Request starting HTTP/1.1 POST http://localhost:5001/api/habitTracker application/json;charset=UTF-8 80
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Route matched with {action = "AddTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (17ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Executed DbCommand (13ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [HabitsTrackers] ([GoalName], [GoalsAreaID], [SelectedDays])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [HabitsTrackers]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing HttpStatusCodeResult, setting HTTP status code 200
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 353.3085ms
Executed action DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API) in 355.0756ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Request finished in 833.3656ms 200 
Request finished in 961.6737ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 66.506ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 83
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 213.9973ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Request finished in 501.0062ms 200 
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 83
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 208.2917ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Request finished in 476.154ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 64.0748ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 97
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 288.7176ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 592.487ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 101
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 309.6344ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 569.4207ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 99
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 290.3531ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Request finished in 552.3163ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/addEvent  
CORS policy execution successful.
Request finished in 70.4864ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/events/addEvent application/json;charset=UTF-8 116
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request finished in 136.2297ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 88
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "AddEvent", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddEvent(DiaryApp.API.Models.EventModel) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 89
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
CORS policy execution successful.
Authorization was successful.
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Successfully validated the token.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[ID] = @__p_0
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 200), @p4='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Date], [Description], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [ID]
FROM [Events]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Executed DbCommand (3ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Authorization was successful.
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 85
Executing HttpStatusCodeResult, setting HTTP status code 200
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 595.2573ms
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Authorization was successful.
Request finished in 1209.1358ms 200 
Executed DbCommand (3ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Executing ObjectResult, writing value of type 'System.Int32'.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Executing HttpStatusCodeResult, setting HTTP status code 200
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 84
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 566.3458ms
CORS policy execution successful.
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Successfully validated the token.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Request finished in 1317.8572ms 200 
Authorization was successful.
Executed action DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API) in 1121.3338ms
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.AddEvent (DiaryApp.API)'
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 85
Executed DbCommand (5ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Authorization was successful.
CORS policy execution successful.
Executing HttpStatusCodeResult, setting HTTP status code 200
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Successfully validated the token.
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 631.7149ms
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Request finished in 1431.343ms 200 
Executed DbCommand (3ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Request finished in 2049.8925ms 200 application/json; charset=utf-8
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Executing HttpStatusCodeResult, setting HTTP status code 200
Authorization was successful.
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 601.6117ms
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request finished in 1311.8426ms 200 
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 350.6638ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Request finished in 1056.0006ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/  
CORS policy execution successful.
Request finished in 66.0271ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/todo/ application/json;charset=UTF-8 77
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodoList (DiaryApp.API)'
Route matched with {action = "UpdateTodoList", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTodoList(DiaryApp.API.Models.TodoListModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (19ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [TodoLists] SET [PageID] = @p0, [PurchasesAreaID] = @p1, [Title] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.TodoController.UpdateTodoList (DiaryApp.API) in 305.7501ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.UpdateTodoList (DiaryApp.API)'
Request finished in 599.2764ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 76.4924ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 66
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 354.6648ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 638.5763ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 64
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 282.2483ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 551.5928ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 72
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 299.3284ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 582.1533ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/toggle/2008  
CORS policy execution successful.
Request finished in 59.2585ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/todo/toggle/2008 application/x-www-form-urlencoded 0
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.ToggleTodo (DiaryApp.API)'
Route matched with {action = "ToggleTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Todos] SET [Done] = @p0, [OwnerID] = @p1, [Subject] = @p2, [Url] = @p3
WHERE [ID] = @p4;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.TodoController.ToggleTodo (DiaryApp.API) in 234.5048ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.ToggleTodo (DiaryApp.API)'
Request finished in 561.9275ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 92.8002ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 214.1512ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 517.4507ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 129.3829ms 204 
Request finished in 161.5846ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 325.6411ms 204 
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Successfully validated the token.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (13ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 692.6138ms
Successfully validated the token.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 847.8645ms
Request finished in 1665.7ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1435.6911ms 204 
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (14ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request finished in 1734.3748ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1605.3986ms
Executed DbCommand (36ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Request finished in 2431.1622ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 661.9629ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1435.6357ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 73.3506ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/habitTracker application/json;charset=UTF-8 80
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Route matched with {action = "AddTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (14ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [HabitsTrackers] ([GoalName], [GoalsAreaID], [SelectedDays])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [HabitsTrackers]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API) in 208.8284ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.AddTracker (DiaryApp.API)'
Request finished in 488.8398ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/habitTracker  
CORS policy execution successful.
Request finished in 71.9637ms 204 
Request starting HTTP/1.1 PUT http://localhost:5001/api/habitTracker application/json;charset=UTF-8 86
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Route matched with {action = "UpdateTracker", controller = "HabitTracker"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateTracker(DiaryApp.API.Models.HabitsTrackerModel) on controller DiaryApp.API.Controllers.HabitTrackerController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 100), @p1='?' (DbType = Int32), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HabitsTrackers] SET [GoalName] = @p0, [GoalsAreaID] = @p1, [SelectedDays] = @p2
WHERE [ID] = @p3;
SELECT @@ROWCOUNT;
Executing HttpStatusCodeResult, setting HTTP status code 200
Executed action DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API) in 218.5375ms
Executed endpoint 'DiaryApp.API.Controllers.HabitTrackerController.UpdateTracker (DiaryApp.API)'
Request finished in 477.3893ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 102.8353ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 214.2309ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 602.8993ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 145.2142ms 204 
Request finished in 177.3934ms 204 
Request finished in 210.9963ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 431.4744ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 675.7427ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request finished in 1433.4741ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 1034.99ms
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 909.5016ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1902.8301ms 200 application/json; charset=utf-8
Authorization was successful.
Request finished in 1971.3437ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 351.0245ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 2543.2258ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 158.7399ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (51ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (63ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (48ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 10489.6542ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 11642.4194ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 130.6541ms 204 
Request finished in 158.7454ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 622.0584ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 618.581ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1371.1657ms 200 application/json; charset=utf-8
Request finished in 1378.9698ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 178.5571ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 304.8654ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 685.0804ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 134.3527ms 204 
Request finished in 175.7875ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 534.5797ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 524.2188ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1304.8995ms 200 application/json; charset=utf-8
Request finished in 1304.1719ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 148.9877ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 268.929ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 644.9588ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 110.5777ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 143.4331ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 461.3305ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 453.966ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1064.1135ms 200 application/json; charset=utf-8
Request finished in 1067.038ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 126.3342ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 360.2188ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 933.7694ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 215.1683ms 204 
Request finished in 268.1303ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 509.892ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 510.155ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1216.3825ms 200 application/json; charset=utf-8
Request finished in 1196.2177ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 93.0807ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 279.5394ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 636.0767ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 176.3506ms 204 
Request finished in 218.8044ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 369.8664ms 204 
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (14ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (14ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1101.8093ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Request finished in 2091.283ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 962.2668ms
Request finished in 613.0269ms 204 
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 1180.7521ms
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 1973.7124ms 200 application/json; charset=utf-8
Request finished in 2243.7261ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (14ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 336.6164ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 3078.3774ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 101.9255ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 64
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request finished in 155.0445ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo application/json;charset=UTF-8 88
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "AddTodoList", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodoList(DiaryApp.API.Models.TodoListModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 823.1663ms
Executed action DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API) in 662.8066ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API)'
Request finished in 1415.9918ms 200 application/json; charset=utf-8
Request finished in 1272.8769ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 116.302ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 234.8219ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 551.6108ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 114.046ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 209.7361ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 337.2144ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 349.9374ms 204 
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
Authorization was successful.
CORS policy execution successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Successfully validated the token.
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 731.4372ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 949.0319ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 1504.9419ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 1729.3928ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 979.2411ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
Request finished in 2057.3522ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 285.9892ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 2347.608ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 152.1516ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 292.0126ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 718.6171ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 132.0605ms 204 
Request finished in 161.9278ms 204 
Request finished in 158.2756ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 394.5774ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Successfully validated the token.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 712.3485ms
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 917.8793ms
Request finished in 1430.2609ms 200 application/json; charset=utf-8
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Request finished in 1864.1785ms 200 application/json; charset=utf-8
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 593.4309ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1577.126ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 2300.7253ms 200 application/json; charset=utf-8
Request finished in 2391.9746ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 241.5538ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 258.5741ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 685.0038ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 191.3954ms 204 
Request finished in 233.926ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 150.1264ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 491.999ms 204 
Authorization was successful.
Successfully validated the token.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
CORS policy execution successful.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 841.532ms
Successfully validated the token.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1052.4116ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1871.11ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Request finished in 1978.8964ms 200 application/json; charset=utf-8
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 1501ms
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Request finished in 2286.9416ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 531.3299ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 2732.117ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 64.6827ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 64
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 286.8953ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 566.9154ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo  
CORS policy execution successful.
Request finished in 62.1898ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo application/json;charset=UTF-8 88
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API)'
Route matched with {action = "AddTodoList", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodoList(DiaryApp.API.Models.TodoListModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API) in 195.1677ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API)'
Request finished in 471.9421ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 101.7858ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 254.1306ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 560.1484ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 138.8354ms 204 
Request finished in 168.112ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 260.8295ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 506.8482ms 204 
Authorization was successful.
Authorization was successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 620.688ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 1389.0271ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 737.5427ms
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1008.1296ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1485.3077ms 200 application/json; charset=utf-8
Authorization was successful.
Request finished in 1921.8811ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 339.6162ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 2489.5389ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 62.3911ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 71
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 254.1679ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 524.2106ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/3004  
CORS policy execution successful.
Request finished in 68.0256ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/3004  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 210.1059ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 486.8732ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 95.4279ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 226.4811ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 524.2516ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 182.158ms 204 
Request finished in 214.5214ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Request finished in 148.7217ms 204 
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 893.8699ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 868.5947ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1018.5596ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 1983.7337ms 200 application/json; charset=utf-8
Request finished in 1979.9436ms 200 application/json; charset=utf-8
CORS policy execution successful.
Request finished in 2076.4006ms 200 application/json; charset=utf-8
Request finished in 2327.648ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 267.0629ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 613.0397ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/3003  
CORS policy execution successful.
Request finished in 66.4013ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/3003  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 199.0999ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 481.4688ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo  
CORS policy execution successful.
Request finished in 67.8663ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo application/json;charset=UTF-8 88
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API)'
Route matched with {action = "AddTodoList", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodoList(DiaryApp.API.Models.TodoListModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API) in 193.5272ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API)'
Request finished in 475.0067ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 66.1229ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 63
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 266.0692ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 579.2959ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 66.278ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 63
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 259.2265ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 540.2098ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 117.98ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 226.5808ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 543.5647ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 160.998ms 204 
Request finished in 194.5695ms 204 
Request finished in 130.5609ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 448.1292ms 204 
Authorization was successful.
Successfully validated the token.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Successfully validated the token.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Authorization was successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 702.0294ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 613.7161ms
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request finished in 1633.2319ms 200 application/json; charset=utf-8
Request finished in 1376.4003ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1563.3201ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 2353.7641ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 737.6262ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 2490.7241ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 158.7049ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 943.0982ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 1349.3718ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Request finished in 178.6566ms 204 
Request finished in 211.3003ms 204 
Request finished in 147.2065ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 529.6663ms 204 
Authorization was successful.
Successfully validated the token.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Successfully validated the token.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 1195.1953ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 920.7012ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 2192.0336ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 1908.6688ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1381.6875ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
Request finished in 2541.7236ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 240.3915ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 2990.5517ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 180.7428ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (39ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (39ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 4849.0413ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 5981.1285ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 119.1696ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 156.5716ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (9ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 589.9143ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 593.4153ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1156.5651ms 200 application/json; charset=utf-8
Request finished in 1147.5234ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 87.8693ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 242.0389ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 558.0997ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 129.9934ms 204 
Request finished in 159.8933ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 253.5806ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 800.8136ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 945.5166ms
Request finished in 1576.1388ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1178.6286ms
CORS policy execution successful.
Request finished in 1868.588ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 2102.9027ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 2035.6084ms 200 application/json; charset=utf-8
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 295.5638ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 690.115ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 216.1231ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 66
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 619.6833ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 909.7942ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 75
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo  
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
CORS policy execution successful.
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Request finished in 97.8515ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo application/json;charset=UTF-8 88
Authorization was successful.
CORS policy execution successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Successfully validated the token.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Route matched with {action = "AddTodoList", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodoList(DiaryApp.API.Models.TodoListModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 512.2285ms
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [TodoLists] ([PageID], [PurchasesAreaID], [Title])
VALUES (@p0, @p1, @p2);
SELECT [ID]
FROM [TodoLists]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Request finished in 894.3155ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'System.Int32'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API) in 373.0378ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodoList (DiaryApp.API)'
Request finished in 830.8147ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 65.6787ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 62
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 269.7548ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 552.5899ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 66
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 293.9002ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 553.3384ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 91.0497ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 207.7705ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 505.3484ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 131.4522ms 204 
Request finished in 160.3604ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 256.0275ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 418.3869ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Successfully validated the token.
Successfully validated the token.
CORS policy execution successful.
Authorization was successful.
Authorization was successful.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 674.5194ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request finished in 1477.6138ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
CORS policy execution successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 961.1216ms
Successfully validated the token.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Authorization was successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1245.6064ms
Request finished in 1754.278ms 200 application/json; charset=utf-8
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request finished in 2206.538ms 200 application/json; charset=utf-8
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 311.256ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 2585.8339ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/3005  
CORS policy execution successful.
Request finished in 75.0871ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/3005  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 226.9238ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 520.5245ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/3006  
CORS policy execution successful.
Request finished in 236.8254ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/3006  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 210.8ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 493.3292ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/4004  
CORS policy execution successful.
Request finished in 74.5951ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/4004  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 203.0725ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 494.4984ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 67.5532ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 87
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 276.4072ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 561.2337ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 71.9142ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 87
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 267.3772ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 555.4929ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 96.3026ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 211.6393ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 514.9257ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 136.9918ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request finished in 167.7897ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Request finished in 294.7872ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Successfully validated the token.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 422.896ms 204 
Authorization was successful.
CORS policy execution successful.
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
Successfully validated the token.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Authorization was successful.
Authorization was successful.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 745.5144ms
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 747.8838ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Request finished in 1754.8918ms 200 application/json; charset=utf-8
Request finished in 1534.6063ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1233.479ms
CORS policy execution successful.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Successfully validated the token.
Request finished in 2058.4747ms 200 application/json; charset=utf-8
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 351.4957ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 2488.2118ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/4006  
CORS policy execution successful.
Request finished in 67.4357ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/4006  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 209.3688ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 500.9208ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/4007  
CORS policy execution successful.
Request finished in 65.8075ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/4007  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 206.661ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 505.7119ms 200 
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 171.8531ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (42ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 3680.5861ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 4574.4176ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 125.7366ms 204 
Request finished in 162.2843ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (8ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 468.6681ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 466.018ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1047.4883ms 200 application/json; charset=utf-8
Request finished in 1041.3696ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 215.6024ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 68
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 422.0592ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 711.4466ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 85.8359ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 217.5324ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 527.5753ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 114.352ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 150.3829ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 453.0295ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 451.6859ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1042.8387ms 200 application/json; charset=utf-8
Request finished in 1034.6974ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/addTodo  
CORS policy execution successful.
Request finished in 70.2705ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/todo/addTodo application/json;charset=UTF-8 87
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Route matched with {action = "AddTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTodo(DiaryApp.API.Models.TodoModel) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Int32), @p2='?' (Size = 200), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Todos] ([Done], [OwnerID], [Subject], [Url])
VALUES (@p0, @p1, @p2, @p3);
SELECT [ID]
FROM [Todos]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoModel'.
Executed action DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API) in 280.7388ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.AddTodo (DiaryApp.API)'
Request finished in 588.6099ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 171.5559ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 341.1033ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 778.4789ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 145.5813ms 204 
Request finished in 196.2927ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 553.2904ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 551.4709ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1376.0503ms 200 application/json; charset=utf-8
Request finished in 1381.8344ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 268.3119ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 263.2483ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 674.2727ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 149.4474ms 204 
Request finished in 182.615ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 511.2608ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 503.3473ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1124.188ms 200 application/json; charset=utf-8
Request finished in 1190.2291ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/5003  
CORS policy execution successful.
Request finished in 84.2406ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/5003  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 239.8488ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 554.9213ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/5002  
CORS policy execution successful.
Request finished in 85.2452ms 204 
Request starting HTTP/1.1 DELETE http://localhost:5001/api/todo/5002  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Route matched with {action = "DeleteTodo", controller = "Todo"}. Executing controller action with signature System.Threading.Tasks.Task DeleteTodo(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[ID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Todos]
WHERE [ID] = @p0;
SELECT @@ROWCOUNT;
Executed action DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API) in 225.3211ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.DeleteTodo (DiaryApp.API)'
Request finished in 558.2023ms 200 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 233.9225ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 237.27ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 639.2526ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 126.8711ms 204 
Request finished in 163.9433ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 503.9295ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 487.8376ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1150.7611ms 200 application/json; charset=utf-8
Request finished in 1162.2493ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 169.4859ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 324.602ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 811.8208ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 118.3796ms 204 
Request finished in 151.5164ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 502.2817ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 499.4585ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1167.0067ms 200 application/json; charset=utf-8
Request finished in 1168.6694ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 118.5117ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 243.0448ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 589.7144ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 108.2639ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 143.9014ms 204 
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 466.2944ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 465.9181ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1025.7803ms 200 application/json; charset=utf-8
Request finished in 1095.3716ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 138.9785ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (11ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 318.8764ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 768.4612ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 132.3096ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 174.7643ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 568.2298ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 561.5173ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1246.6135ms 200 application/json; charset=utf-8
Request finished in 1238.5921ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 153.689ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 269.1418ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 716.0575ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 108.0626ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 153.6065ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 496.4252ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 500.9473ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1158.2543ms 200 application/json; charset=utf-8
Request finished in 1144.6106ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 131.1134ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 250.4528ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 746.9135ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 107.4753ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 142.622ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 489.3045ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 487.6337ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1090.4456ms 200 application/json; charset=utf-8
Request finished in 1089.4666ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 155.7423ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 257.7137ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 749.1194ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 130.8424ms 204 
Request finished in 168.4224ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 469.2089ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 470.6264ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1093.2039ms 200 application/json; charset=utf-8
Request finished in 1083.2253ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 72.8539ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 238.5075ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 560.5577ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 136.9992ms 204 
Request finished in 170.878ms 204 
CORS policy execution successful.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 263.9463ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 430.139ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
CORS policy execution successful.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Successfully validated the token.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 772.5852ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Authorization was successful.
Request finished in 1526.7655ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 1035.0332ms
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Request finished in 2057.6563ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 1444.2005ms
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Request finished in 2198.6992ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 862.1209ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Request finished in 2690.3031ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 95.159ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 216.6952ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 587.1856ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 147.0707ms 204 
Request finished in 179.7375ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Request finished in 316.6878ms 204 
Successfully validated the token.
CORS policy execution successful.
CORS policy execution successful.
Authorization was successful.
Successfully validated the token.
Successfully validated the token.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Authorization was successful.
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Authorization was successful.
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Authorization was successful.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 792.8007ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 1006.4876ms
Request finished in 1629.3642ms 200 application/json; charset=utf-8
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
CORS policy execution successful.
Request finished in 2003.2673ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1442.8143ms
Request finished in 2258.7492ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 2289.2535ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 259.6442ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Request finished in 719.2276ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 117.6469ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 226.1615ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 640.8303ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 148.1968ms 204 
Request finished in 180.4453ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
Successfully validated the token.
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 669.3801ms
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 867.8324ms
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request finished in 1460.1742ms 200 application/json; charset=utf-8
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 316.0061ms 204 
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request finished in 1729.1932ms 200 application/json; charset=utf-8
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1314.2372ms
Request finished in 2124.3682ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
CORS policy execution successful.
Request finished in 2112.501ms 200 application/json; charset=utf-8
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 412.1612ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Request finished in 853.0529ms 200 application/json; charset=utf-8
User profile is available. Using 'C:\Users\Keer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
Failed to determine the https port for redirect.
CORS policy execution successful.
Request finished in 226.1971ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (81ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (53ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 4279.2948ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 5520.87ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 137.8039ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 171.0366ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (4ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 508.9835ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 511.4569ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1401.1571ms 200 application/json; charset=utf-8
Request finished in 1400.0179ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 311.6341ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 305.1751ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 645.8223ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 103.0761ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 136.0288ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 493.212ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 492.9336ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1239.6009ms 200 application/json; charset=utf-8
Request finished in 1243.7338ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Request finished in 88.0672ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Route matched with {action = "GetMonthPage", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMonthPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year], [p].[DesiresAreaID], [p].[GoalsAreaID], [p].[IdeasAreaID], [p].[PurchasesAreaID]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MonthPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MonthPageModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API) in 249.1034ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetMonthPage (DiaryApp.API)'
Request finished in 617.3034ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/desiresArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/ideasArea/3  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/monthpage/goalsArea/3  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 180.3955ms 204 
Request finished in 215.816ms 204 
CORS policy execution successful.
CORS policy execution successful.
Request finished in 329.1097ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/goalsArea/3  
Request finished in 373.435ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/purchasesArea/3  
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/desiresArea/3  
CORS policy execution successful.
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Route matched with {action = "GetGoalsArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetGoalsArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetPurchasesArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPurchasesArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Route matched with {action = "GetDesiresArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDesiresArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [g].[ID], [g].[Header], [g].[PageID]
FROM [GoalsAreas] AS [g]
WHERE [g].[PageID] = @__pageID_0
Executed DbCommand (12ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Header], [p].[PageID]
FROM [PurchasesAreas] AS [p]
WHERE [p].[PageID] = @__pageID_0
Executed DbCommand (12ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[ID], [d].[Header], [d].[PageID]
FROM [DesiresAreas] AS [d]
WHERE [d].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [h].[ID], [h].[GoalName], [h].[GoalsAreaID], [h].[SelectedDays]
FROM [HabitsTrackers] AS [h]
WHERE [h].[GoalsAreaID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PurchasesAreaID] = @__p_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[DesiresAreaID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.GoalsAreaModel'.
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed action DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API) in 787.5881ms
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetGoalsArea (DiaryApp.API)'
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Request finished in 1768.9426ms 200 application/json; charset=utf-8
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Request starting HTTP/1.1 GET http://localhost:5001/api/monthpage/ideasArea/3  
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.DesiresAreaModel'.
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
CORS policy execution successful.
Executed action DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API) in 1241.9586ms
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Successfully validated the token.
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetDesiresArea (DiaryApp.API)'
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.PurchasesAreaModel'.
Authorization was successful.
Request finished in 2480.556ms 200 application/json; charset=utf-8
Executed action DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API) in 1584.9716ms
Executing endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetPurchasesArea (DiaryApp.API)'
Route matched with {action = "GetIdeasArea", controller = "MonthPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetIdeasArea(Int32) on controller DiaryApp.API.Controllers.MonthPageController (DiaryApp.API).
Request finished in 2537.3031ms 200 application/json; charset=utf-8
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (12ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[ID], [i].[Header], [i].[PageID]
FROM [IdeasAreas] AS [i]
WHERE [i].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[IdeasAreaID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.IdeasAreaModel'.
Executed action DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API) in 419.769ms
Executed endpoint 'DiaryApp.API.Controllers.MonthPageController.GetIdeasArea (DiaryApp.API)'
Request finished in 3225.1561ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 90.1536ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 230.7077ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 545.0613ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 103.1355ms 204 
Request finished in 138.7222ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 480.5173ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 476.7686ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1039.4407ms 200 application/json; charset=utf-8
Request finished in 1106.2372ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 99.7577ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 287.6495ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 705.0624ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 115.1069ms 204 
Request finished in 150.9323ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 475.2837ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 486.4362ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1166.7084ms 200 application/json; charset=utf-8
Request finished in 1165.9373ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 278.5748ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 270.596ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 817.8222ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 121.5309ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 157.8449ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 545.2486ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 545.428ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1182.7044ms 200 application/json; charset=utf-8
Request finished in 1176.7339ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 87.9665ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 276.3834ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 605.9847ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 110.9978ms 204 
Request finished in 145.0556ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 530.1009ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 532.5488ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1236.7575ms 200 application/json; charset=utf-8
Request finished in 1239.4031ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 357.6824ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 338.8841ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 852.4013ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 127.0451ms 204 
Request finished in 172.5215ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 529.5082ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 536.3869ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1422.2413ms 200 application/json; charset=utf-8
Request finished in 1411.071ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 271.1424ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 261.7484ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 640.37ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 135.4643ms 204 
Request finished in 167.415ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 570.5555ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 562.0922ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1305.8359ms 200 application/json; charset=utf-8
Request finished in 1397.8881ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 337.1307ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 975.1679ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 1230.3281ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 81.4783ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 223.7692ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 559.3479ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 146.2334ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 182.3762ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 478.0644ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 481.9964ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1112.8537ms 200 application/json; charset=utf-8
Request finished in 1108.072ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 503.7081ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 189.9777ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 448.436ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 76.3588ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 244.4726ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 568.8651ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 113.2628ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 150.1493ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 493.855ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 493.1407ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1122.6627ms 200 application/json; charset=utf-8
Request finished in 1119.6072ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 100.4027ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 239.1693ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 561.192ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 111.1275ms 204 
Request finished in 145.6032ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 485.263ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 485.4089ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1127.3454ms 200 application/json; charset=utf-8
Request finished in 1129.9611ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 87.2694ms 204 
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 141.8825ms 204 
Request finished in 177.7016ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 499.9777ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 499.6825ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1143.5589ms 200 application/json; charset=utf-8
Request finished in 1140.9348ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 153.1148ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (4ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 313.5743ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 766.5093ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 171.4084ms 204 
Request finished in 219.3447ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 495.962ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 493.7126ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1162.8172ms 200 application/json; charset=utf-8
Request finished in 1148.2708ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 165.9964ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 333.5811ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 809.7116ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 144.5879ms 204 
Request finished in 183.9423ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 501.9566ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 507.6668ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1128.588ms 200 application/json; charset=utf-8
Request finished in 1127.9151ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 153.4918ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 323.3995ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 789.1125ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 163.2964ms 204 
Request finished in 201.6868ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 479.1069ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 479.9397ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1118.0063ms 200 application/json; charset=utf-8
Request finished in 1116.1913ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 135.9618ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 279.1441ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 746.5532ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 127.8482ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 166.2866ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 512.8671ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 513.9567ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1198.5177ms 200 application/json; charset=utf-8
Request finished in 1194.7827ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 132.0909ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 275.0755ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 739.4456ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 173.7946ms 204 
Request finished in 215.5556ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 503.6666ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 502.7106ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1159.8871ms 200 application/json; charset=utf-8
Request finished in 1157.1707ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 159.2122ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 286.1728ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 890.9163ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 175.468ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 217.0669ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 494.9857ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 490.9249ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1201.1945ms 200 application/json; charset=utf-8
Request finished in 1197.0438ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 77.246ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 48
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
29.02.2020 12:18:12 Username or password is incorrect
Executing ObjectResult, writing value of type 'System.String'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 225.8171ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 472.7444ms 400 text/plain; charset=utf-8
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 48
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
29.02.2020 12:18:14 Username or password is incorrect
Executing ObjectResult, writing value of type 'System.String'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 216.4453ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 435.5472ms 400 text/plain; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 86.4412ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 48
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
29.02.2020 12:18:29 Username or password is incorrect
Executing ObjectResult, writing value of type 'System.String'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 228.3916ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 490.1132ms 400 text/plain; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 78.8004ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 184.8081ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 427.4207ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 82.928ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 234.4068ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 566.2945ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 113.7328ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request finished in 153.5384ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 503.8747ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 510.9109ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1151.36ms 200 application/json; charset=utf-8
Request finished in 1148.064ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 106.4797ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 230.3187ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 575.7715ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 112.5158ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 148.6698ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 505.9666ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 504.6579ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1140.7193ms 200 application/json; charset=utf-8
Request finished in 1143.8509ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 152.5323ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1087.6607ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1498.077ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 107.9168ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 143.3697ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 505.5643ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 505.2609ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1146.9906ms 200 application/json; charset=utf-8
Request finished in 1145.3114ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 158.2249ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 330.1799ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 969.3264ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 124.0591ms 204 
Request finished in 160.3174ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 612.6579ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 598.9094ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1286.4427ms 200 application/json; charset=utf-8
Request finished in 1291.0764ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 133.8391ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 263.2768ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 661.9432ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 183.8565ms 204 
Request finished in 130.3592ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 476.3336ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 476.4221ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1187.5048ms 200 application/json; charset=utf-8
Request finished in 1165.6512ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 137.8242ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (16ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 418.4733ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 989.0566ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 194.549ms 204 
Request finished in 242.1007ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 499.416ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 496.84ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1211.7433ms 200 application/json; charset=utf-8
Request finished in 1202.3528ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 391.53ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 290.3687ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 666.7884ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 125.4416ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 169.2644ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 543.9316ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 543.9714ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1271.1871ms 200 application/json; charset=utf-8
Request finished in 1265.5299ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 547.9474ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (904ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (167ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1330.5813ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 2087.29ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 121.4562ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 157.7987ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (702ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (756ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (85ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (59ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1380.6009ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1462.2624ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 2184.98ms 200 application/json; charset=utf-8
Request finished in 2257.9771ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 152.0673ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (797ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (54ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 1104.7531ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 1601.0935ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 135.3566ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 181.2542ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (796ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (855ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (32ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 1337.8263ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 1417.2602ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 2095.9645ms 200 application/json; charset=utf-8
Request finished in 2181.7558ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 131.3505ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 328.1965ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 819.8443ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 137.4762ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 183.8666ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 546.4135ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 538.8831ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1296.5743ms 200 application/json; charset=utf-8
Request finished in 1283.1463ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 112.7588ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 251.1716ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 765.2209ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 116.2717ms 204 
Request finished in 154.6284ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 494.7234ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 495.4553ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1157.0533ms 200 application/json; charset=utf-8
Request finished in 1153.1513ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 167.6721ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (31ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 410.627ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 954.9448ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 173.6958ms 204 
Request finished in 227.1823ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 603.5594ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 588.8556ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1371.7542ms 200 application/json; charset=utf-8
Request finished in 1355.6836ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 147.0277ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 334.0078ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 856.9234ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 142.7608ms 204 
Request finished in 182.6212ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 649.8481ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 647.7515ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1521.8131ms 200 application/json; charset=utf-8
Request finished in 1522.1048ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 125.2975ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 234.6464ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 599.6499ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 126.7995ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 174.7325ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 516.18ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 517.7001ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1169.5159ms 200 application/json; charset=utf-8
Request finished in 1156.0561ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 430.7796ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 219.9908ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 477.1789ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 83.2007ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 249.6129ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 595.2817ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 120.4397ms 204 
Request finished in 154.8406ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (3ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 520.1414ms
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 519.8802ms
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Request finished in 1149.2015ms 200 application/json; charset=utf-8
Request finished in 1220.3607ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 127.5743ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 246.2311ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 618.6944ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 121.2472ms 204 
Request finished in 162.4348ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 541.4118ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 538.6773ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1261.1666ms 200 application/json; charset=utf-8
Request finished in 1256.6469ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/users/authenticate  
CORS policy execution successful.
Request finished in 78.2709ms 204 
Request starting HTTP/1.1 POST http://localhost:5001/api/users/authenticate application/json;charset=UTF-8 49
CORS policy execution successful.
Executing endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Authenticate(DiaryApp.API.Models.UserModel) on controller DiaryApp.API.Controllers.UsersController (DiaryApp.API).
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[ID], [u].[PasswordHash], [u].[PasswordSalt], [u].[ProfileImageUrl], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0
Executing ObjectResult, writing value of type '<>f__AnonymousType0`3[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
Executed action DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API) in 189.0742ms
Executed endpoint 'DiaryApp.API.Controllers.UsersController.Authenticate (DiaryApp.API)'
Request finished in 443.7842ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Request finished in 86.5939ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/mainpage/1/2020/2  
CORS policy execution successful.
Successfully validated the token.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Route matched with {action = "GetMainPage", controller = "MainPage"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMainPage(Int32, Int32, Int32) on controller DiaryApp.API.Controllers.MainPageController (DiaryApp.API).
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__userID_0='?' (DbType = Int32), @__month_1='?' (DbType = Int32), @__year_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[ID], [p].[Discriminator], [p].[Month], [p].[UserID], [p].[Year]
FROM [PageBase] AS [p]
INNER JOIN [Users] AS [u] ON [p].[UserID] = [u].[ID]
WHERE ([p].[Discriminator] = N'MainPage') AND ((([u].[ID] = @__userID_0) AND ([p].[Month] = @__month_1)) AND ([p].[Year] = @__year_2))
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.MainPageModel'.
Executed action DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API) in 244.5512ms
Executed endpoint 'DiaryApp.API.Controllers.MainPageController.GetMainPage (DiaryApp.API)'
Request finished in 597.818ms 200 application/json; charset=utf-8
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/todo/1  
Request starting HTTP/1.1 OPTIONS http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Request finished in 115.7683ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/todo/1  
Request finished in 155.19ms 204 
Request starting HTTP/1.1 GET http://localhost:5001/api/events/1  
CORS policy execution successful.
CORS policy execution successful.
Successfully validated the token.
Successfully validated the token.
Authorization was successful.
Authorization was successful.
Executing endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executing endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Route matched with {action = "GetByPageID", controller = "Todo"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.TodoController (DiaryApp.API).
Route matched with {action = "GetByPageID", controller = "Events"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetByPageID(Int32) on controller DiaryApp.API.Controllers.EventsController (DiaryApp.API).
Authorization was successful.
Authorization was successful.
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Entity Framework Core 3.1.1 initialized 'ApplicationContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: using lazy-loading proxies 
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [t].[ID], [t].[PageID], [t].[PurchasesAreaID], [t].[Title]
FROM [TodoLists] AS [t]
WHERE [t].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__pageID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[ID], [e].[DesiresAreaID], [e].[IdeasAreaID], [e].[PageID], [e].[Title]
FROM [EventLists] AS [e]
WHERE [e].[PageID] = @__pageID_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[ID], [t].[Done], [t].[OwnerID], [t].[Subject], [t].[Url]
FROM [Todos] AS [t]
WHERE [t].[OwnerID] = @__p_0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [e].[ID], [e].[Date], [e].[Description], [e].[OwnerID], [e].[Subject], [e].[Url]
FROM [Events] AS [e]
WHERE [e].[OwnerID] = @__p_0
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.TodoListModel'.
Executing ObjectResult, writing value of type 'DiaryApp.API.Models.EventListModel'.
Executed action DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API) in 506.8653ms
Executed action DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API) in 509.8007ms
Executed endpoint 'DiaryApp.API.Controllers.TodoController.GetByPageID (DiaryApp.API)'
Executed endpoint 'DiaryApp.API.Controllers.EventsController.GetByPageID (DiaryApp.API)'
Request finished in 1167.4147ms 200 application/json; charset=utf-8
Request finished in 1163.9002ms 200 application/json; charset=utf-8
